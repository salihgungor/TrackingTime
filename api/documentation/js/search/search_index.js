var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.525,1,2.485]],["body/controllers/AppController.html",[0,2.495,1,4.066,2,2.014,3,0.279,4,0.246,5,0.246,6,4.077,7,0.452,8,1.791,9,5.735,10,1.371,11,0.021,12,0.74,13,4.768,14,1.446,15,5.05,16,0.428,17,0.835,18,3.748,19,4.077,20,0.279,21,0.013,22,2.592,23,1.901,24,1.446,25,4.768,26,0.017,27,0.017]],["title/modules/AppModule.html",[28,1.287,29,2.28]],["body/modules/AppModule.html",[1,3.748,2,2.001,3,0.199,4,0.176,5,0.176,11,0.021,16,0.508,17,0.597,18,3.738,19,2.916,20,0.199,21,0.01,26,0.013,27,0.013,28,1.69,29,4.49,30,1.528,31,2.123,32,2.916,33,2.916,34,2.916,35,4.041,36,3.738,37,3.738,38,3.478,39,2.407,40,1.732,41,1.732,42,3.41,43,2.575,44,2.959,45,4.737,46,2.153,47,4.737,48,2.59,49,1.992,50,1.36,51,3.41,52,3.41,53,3.41,54,3.261,55,3.41,56,3.41,57,2.347,58,3.41,59,3.41,60,2.916,61,3.41,62,1.992,63,3.41,64,3.41,65,3.41,66,3.41]],["title/injectables/AppService.html",[18,2.109,67,0.67]],["body/injectables/AppService.html",[3,0.291,4,0.257,5,0.257,7,0.472,8,1.84,9,5.822,11,0.02,12,0.773,14,1.51,15,5.187,16,0.361,17,0.872,18,3.543,20,0.291,21,0.014,24,1.51,26,0.017,27,0.017,67,1.126,68,1.877,69,4.258,70,4.979,71,4.979,72,4.979]],["title/controllers/AuthController.html",[0,1.525,73,2.485]],["body/controllers/AuthController.html",[0,1.671,2,1.671,3,0.231,4,0.205,5,0.205,7,0.375,8,1.59,10,1.138,11,0.021,12,0.614,14,1.2,16,0.472,17,0.693,20,0.231,21,0.011,22,2.151,23,1.578,24,1.2,26,0.015,27,0.015,73,3.608,74,3.383,75,2.724,76,3.957,77,2.482,78,4.481,79,3.957,80,3.907,81,3.957,82,3.957,83,1.336,84,1.079,85,0.472,86,1.266,87,1.886,88,2.724,89,2.724,90,2.724,91,2.724,92,2.311,93,2.311,94,1.773,95,2.499,96,3.006,97,3.194,98,3.957,99,3.608,100,3.957,101,3.957,102,1.411,103,3.957,104,3.957,105,3.957,106,3.957,107,3.957,108,2.724,109,1.671,110,3.957,111,2.499,112,2.724,113,2.151,114,1.886,115,2.724,116,3.006]],["title/classes/AuthLoginDto.html",[21,0.01,80,2.109]],["body/classes/AuthLoginDto.html",[3,0.263,4,0.233,5,0.233,7,0.427,10,1.639,11,0.02,12,0.885,16,0.453,20,0.263,21,0.016,26,0.016,27,0.016,80,3.33,85,0.679,95,3.95,102,1.607,117,1.903,118,3.853,119,1.639,120,2.641,121,2.641,122,1.699,123,4.506,124,4.506,125,3.423,126,4.506,127,4.331,128,2.717,129,2.02,130,3.6,131,3.423,132,2.98]],["title/modules/AuthModule.html",[28,1.287,35,2.28]],["body/modules/AuthModule.html",[2,2.009,3,0.2,4,0.177,5,0.177,11,0.021,16,0.512,17,0.6,20,0.2,21,0.01,26,0.013,27,0.013,28,1.223,30,1.537,31,2.131,35,4.433,38,3.484,39,2.416,40,1.742,41,1.742,43,2.585,44,2.585,46,2.165,49,2.003,50,1.367,73,3.759,94,1.537,97,3.367,133,2.932,134,3.428,135,2.932,136,3.912,137,3.912,138,3.428,139,2.605,140,3.428,141,2.932,142,2.165,143,3.428,144,1.097,145,3.428,146,1.634,147,2.605,148,4.755,149,3.428,150,2.605,151,3.428,152,3.428,153,4.148,154,2.932,155,3.428,156,2.36,157,3.428,158,2.932,159,3.428,160,3.428,161,3.428,162,3.428,163,3.428,164,2.605,165,3.428]],["title/injectables/AuthService.html",[67,0.67,97,1.962]],["body/injectables/AuthService.html",[3,0.2,4,0.177,5,0.177,7,0.325,8,1.442,11,0.021,12,0.848,14,1.442,16,0.427,17,0.6,20,0.2,21,0.01,22,1.864,24,1.656,26,0.013,27,0.013,67,0.883,68,1.292,77,2.707,78,4.067,80,3.744,83,1.844,84,1.489,85,0.651,86,1.747,87,1.634,95,2.165,96,2.605,97,2.585,109,2.009,113,1.864,114,1.634,120,2.009,121,1.448,144,1.747,146,2.952,147,2.605,150,2.605,166,2.932,167,4.755,168,1.537,169,3.428,170,6.194,171,3.428,172,4.755,173,3.428,174,4.755,175,3.428,176,2.585,177,2.36,178,3.428,179,3.428,180,2.776,181,3.428,182,3.428,183,2.605,184,3.428,185,3.428,186,3.428,187,2.932,188,3.428,189,3.428,190,3.428,191,2.932,192,3.428,193,2.932,194,3.428,195,3.613,196,3.428]],["title/entities/Client.html",[197,1.962,198,1.72]],["body/entities/Client.html",[3,0.215,4,0.19,5,0.19,7,0.348,10,1.825,11,0.021,12,0.985,16,0.361,20,0.215,21,0.01,26,0.014,27,0.014,62,2.913,84,1.543,85,0.78,119,1.434,122,1.289,197,2.71,198,2.376,199,2.32,200,3.142,201,4.3,202,2.376,203,3.897,204,4.3,205,3.3,206,2.791,207,3.674,208,1.646,209,4.3,210,3.674,211,2.791,212,3.788,213,3.788,214,3.433,215,3.674,216,2.61,217,3.674,218,4.986,219,4.264,220,2.791,221,3.674,222,2.791,223,3.674,224,2.791,225,3.788,226,4.612,227,3.788,228,4.264,229,3.788,230,1.867,231,1.997,232,3.142,233,3.674]],["title/controllers/ClientController.html",[0,1.525,234,2.485]],["body/controllers/ClientController.html",[0,0.936,2,0.936,3,0.129,4,0.115,5,0.115,7,0.21,8,1.045,10,1.574,11,0.021,12,0.85,14,1.661,16,0.428,17,0.388,20,0.129,21,0.006,22,1.204,23,0.883,24,1.661,26,0.01,27,0.01,75,1.525,77,2.711,83,1.746,84,1.41,85,0.616,86,1.655,87,2.274,88,2.372,89,2.372,90,1.525,92,1.294,93,1.294,94,0.993,99,1.525,102,0.79,108,3.769,109,2.016,111,3.458,112,3.769,113,3.212,114,2.816,115,3.769,116,4.159,122,1.569,198,1.642,202,2.816,208,1.896,216,1.687,234,2.372,235,1.894,236,2.013,237,3.014,238,2.176,239,2.947,240,2.176,241,2.471,242,1.894,243,3.458,244,2.215,245,2.215,246,1.894,247,2.215,248,1.399,249,1.894,250,2.215,251,2.215,252,2.215,253,2.215,254,1.399,255,2.215,256,2.215,257,1.683,258,3.732,259,2.215,260,2.215,261,1.894,262,1.683,263,1.683,264,1.399,265,0.936,266,1.683,267,1.294,268,1.683,269,2.299,270,1.894,271,1.525,272,2.947,273,1.525,274,1.683,275,2.215,276,2.215,277,1.683,278,4.682,279,2.215,280,2.215,281,2.215,282,1.683,283,1.894,284,2.215,285,1.894,286,2.215,287,2.215,288,1.525,289,1.683,290,1.683,291,1.683,292,2.215,293,1.894,294,1.894,295,2.215,296,1.894,297,2.215,298,2.215,299,1.894,300,1.525,301,1.894,302,1.894]],["title/modules/ClientModule.html",[28,1.287,36,2.109]],["body/modules/ClientModule.html",[2,2.327,3,0.25,4,0.221,5,0.221,11,0.021,16,0.483,17,0.748,20,0.25,21,0.012,26,0.015,27,0.015,28,1.965,30,1.915,31,2.469,36,4.059,39,2.8,40,2.171,41,2.171,43,2.995,44,2.322,49,2.496,50,1.703,198,2.036,234,4.199,269,3.949,270,3.653,303,3.653,304,3.653,305,3.653,306,4.272,307,3.793,308,4.272,309,3.653,310,4.272]],["title/injectables/ClientService.html",[67,0.67,269,1.962]],["body/injectables/ClientService.html",[3,0.185,4,0.164,5,0.164,7,0.301,8,1.366,11,0.021,12,0.971,14,1.825,16,0.453,17,0.556,20,0.185,21,0.009,23,1.265,24,1.825,26,0.013,27,0.013,50,1.265,67,0.836,68,1.196,83,2.033,84,1.641,85,0.717,86,1.926,168,2.018,176,2.846,180,1.422,198,1.512,202,2.495,208,2.945,230,1.612,236,2.631,237,3.307,238,2.844,240,2.844,241,2.631,242,3.851,243,3.599,248,2.844,254,2.844,257,3.421,258,4.061,269,2.448,271,2.184,272,3.851,273,2.184,309,2.713,311,2.713,312,3.173,313,3.599,314,3.173,315,4.504,316,3.173,317,3.173,318,3.173,319,3.173,320,3.173,321,2.184,322,3.173,323,1.725,324,3.173,325,3.173,326,3.173,327,3.173,328,3.173,329,3.173,330,3.173,331,3.173,332,3.173,333,3.173]],["title/classes/CreateClientDto.html",[21,0.01,243,2.28]],["body/classes/CreateClientDto.html",[3,0.283,4,0.25,5,0.25,7,0.459,10,1.393,11,0.02,12,0.752,16,0.432,20,0.283,21,0.017,23,2.576,26,0.017,27,0.017,84,1.762,85,0.577,102,1.727,117,2.045,119,1.715,122,1.541,125,3.679,128,2.842,129,2.17,132,2.842,243,3.766,334,5.099,335,3.679,336,4.843]],["title/classes/CreateTrackingtimeDto.html",[21,0.01,337,2.109]],["body/classes/CreateTrackingtimeDto.html",[3,0.177,4,0.157,5,0.157,7,0.288,10,1.867,11,0.021,12,1.008,16,0.37,20,0.177,21,0.014,26,0.012,27,0.012,85,0.81,102,1.081,117,1.281,119,1.254,122,1.529,128,3.024,129,1.359,132,3.151,205,3.035,208,1.359,337,2.547,338,5.024,339,2.304,340,3.002,341,3.729,342,3.002,343,2.754,344,3.002,345,3.002,346,3.002,347,2.754,348,4.36,349,3.032,350,3.032,351,3.032,352,3.032,353,4.36,354,3.032,355,5.106,356,3.032,357,3.032,358,3.032,359,3.032,360,2.088,361,4.366,362,3.729,363,3.515,364,3.889,365,3.032,366,2.304,367,2.304,368,5.106,369,4.36,370,4.679,371,4.36,372,2.304,373,4.36,374,2.304,375,2.304,376,2.304,377,2.304,378,3.032]],["title/classes/CreateUserDto.html",[21,0.01,379,2.28]],["body/classes/CreateUserDto.html",[3,0.21,4,0.186,5,0.186,7,0.341,10,1.812,11,0.021,12,0.978,16,0.457,20,0.21,21,0.014,26,0.014,27,0.014,85,0.751,102,1.283,117,1.52,119,1.414,120,2.365,121,2.365,122,1.752,127,3.735,128,3.003,129,1.613,130,3.105,131,2.734,132,3.1,265,2.365,363,3.385,364,3.98,379,3.105,380,4.478,381,2.734,382,3.537,383,3.856,384,3.599,385,3.077,386,4.917,387,3.077,388,3.077,389,3.077,390,3.077,391,3.856,392,3.599,393,3.077,394,3.077,395,3.077,396,2.734,397,2.734,398,3.105,399,2.734,400,2.734,401,2.734,402,3.599]],["title/classes/HttpExceptionFilter.html",[21,0.01,54,2.485]],["body/classes/HttpExceptionFilter.html",[3,0.228,4,0.202,5,0.202,7,0.371,8,1.576,11,0.021,12,0.606,14,1.185,16,0.423,17,0.684,20,0.228,21,0.011,26,0.015,27,0.015,54,3.577,83,1.319,84,1.065,85,0.466,86,1.25,91,3.577,92,3.636,111,3.688,117,1.65,180,2.904,264,2.467,403,4.444,404,3.341,405,3.948,406,5.839,407,5.196,408,4.993,409,6.224,410,3.907,411,3.907,412,3.907,413,5.839,414,2.689,415,3.577,416,3.907,417,3.907,418,3.907,419,3.907,420,3.907,421,5.196,422,3.907,423,3.907,424,3.907,425,3.907,426,3.907,427,3.907,428,3.907,429,3.907,430,3.907,431,3.907,432,3.907,433,3.907,434,3.907,435,3.907,436,3.907,437,3.907,438,3.907]],["title/interfaces/IClient.html",[439,1.962,440,2.743]],["body/interfaces/IClient.html",[3,0.309,4,0.273,5,0.273,7,0.501,11,0.019,20,0.309,26,0.018,27,0.018,84,1.829,85,0.629,119,1.806,122,1.624,439,2.869,440,4.773,441,3.634,442,4.513,443,5.278]],["title/interfaces/ITrackingtime.html",[439,1.962,444,2.743]],["body/interfaces/ITrackingtime.html",[3,0.234,4,0.207,5,0.207,7,0.379,11,0.021,16,0.382,20,0.234,26,0.015,27,0.015,85,0.837,119,1.517,122,1.832,144,2.146,198,3.196,205,3.413,340,4.065,342,4.065,343,3.729,344,4.065,345,4.065,346,4.065,347,3.729,366,3.035,367,3.035,372,3.035,374,3.035,375,3.035,376,3.035,377,3.035,439,2.172,441,2.75,444,4.007,445,3.416,446,2.523,447,3.416,448,3.995,449,3.995]],["title/interfaces/IUser.html",[439,1.962,450,2.28]],["body/interfaces/IUser.html",[3,0.267,4,0.236,5,0.236,7,0.434,11,0.02,20,0.267,26,0.016,27,0.016,85,0.812,119,1.655,120,2.791,121,2.659,122,1.903,265,2.659,382,4.173,383,4.549,439,2.486,441,3.148,450,3.634,451,3.911,452,3.911,453,4.573]],["title/injectables/JwtAuthGuard.html",[67,0.67,454,2.743]],["body/injectables/JwtAuthGuard.html",[3,0.305,4,0.269,5,0.269,11,0.02,16,0.452,17,0.913,20,0.305,21,0.015,26,0.017,27,0.017,67,1.157,68,1.964,93,3.044,94,2.335,231,2.833,454,4.736,455,4.456,456,3.959,457,5.211]],["title/injectables/JwtStrategy.html",[67,0.67,136,2.28]],["body/injectables/JwtStrategy.html",[3,0.231,4,0.205,5,0.205,7,0.375,8,1.59,11,0.021,12,0.814,14,1.2,16,0.453,17,0.693,20,0.231,21,0.011,24,1.2,26,0.015,27,0.015,46,2.499,67,0.973,68,1.491,77,2.482,83,1.77,84,1.429,85,0.746,86,1.677,87,1.886,94,1.773,120,2.214,136,3.31,153,4.944,168,1.773,183,3.006,214,2.724,231,2.151,265,1.671,458,3.383,459,4.481,460,5.241,461,3.957,462,5.241,463,5.241,464,3.957,465,3.957,466,3.006,467,3.383,468,3.383,469,3.383,470,3.006,471,3.957,472,3.957,473,3.957,474,3.957,475,3.957,476,3.957,477,3.957,478,3.957,479,3.957,480,3.957]],["title/modules/LanguageSeederModule.html",[28,1.287,481,2.28]],["body/modules/LanguageSeederModule.html",[3,0.26,4,0.23,5,0.23,11,0.021,16,0.474,17,0.778,20,0.26,21,0.012,26,0.016,27,0.016,28,2.015,30,1.991,31,2.532,39,2.87,40,2.257,41,2.257,43,3.071,44,2.414,49,2.595,50,1.771,144,1.421,164,3.374,307,3.889,446,2.805,481,4.427,482,3.798,483,3.798,484,3.798,485,4.267,486,4.441,487,3.798]],["title/injectables/LocalAuthGuard.html",[67,0.67,488,2.743]],["body/injectables/LocalAuthGuard.html",[3,0.305,4,0.269,5,0.269,11,0.02,16,0.452,17,0.913,20,0.305,21,0.015,26,0.017,27,0.017,67,1.157,68,1.964,93,3.044,94,2.335,231,2.833,456,3.959,488,4.736,489,4.456,490,5.211]],["title/injectables/LocalStrategy.html",[67,0.67,137,2.28]],["body/injectables/LocalStrategy.html",[3,0.226,4,0.2,5,0.2,7,0.367,8,1.566,11,0.021,12,0.802,14,1.174,16,0.468,17,0.678,20,0.226,21,0.011,22,2.104,24,1.174,26,0.014,27,0.014,67,0.959,68,1.459,77,2.455,80,2.261,83,1.744,84,1.408,85,0.615,86,1.652,94,1.734,95,2.444,96,2.94,97,3.612,109,1.635,120,2.181,121,2.455,122,1.603,137,3.261,141,3.309,144,1.652,168,1.734,176,2.807,177,2.664,180,1.734,183,2.94,187,3.309,231,2.104,459,4.416,466,2.94,468,3.309,469,3.309,470,2.94,491,3.309,492,3.87,493,3.87,494,3.87,495,3.87,496,3.87,497,3.309,498,3.87,499,3.87,500,3.87,501,3.87,502,3.87]],["title/guards/RolesGuard.html",[267,2.109,503,2.743]],["body/guards/RolesGuard.html",[3,0.219,4,0.194,5,0.194,7,0.356,8,1.534,11,0.021,12,0.785,14,1.138,16,0.415,17,0.657,20,0.219,21,0.01,22,2.04,24,1.534,26,0.014,27,0.014,48,2.85,62,2.192,67,0.939,83,1.708,84,1.379,85,0.603,86,1.619,144,1.619,168,1.682,176,2.749,180,2.744,265,2.136,267,2.955,405,2.85,504,3.752,505,3.208,506,6.393,507,3.752,508,6.586,509,3.752,510,3.752,511,6.123,512,3.752,513,5.058,514,5.058,515,5.722,516,3.208,517,3.752,518,3.752,519,3.208,520,3.752,521,3.752,522,5.058,523,3.752,524,3.752,525,3.752,526,3.752,527,3.752]],["title/injectables/Seeder.html",[67,0.67,528,2.28]],["body/injectables/Seeder.html",[3,0.215,4,0.19,5,0.19,7,0.348,8,1.512,11,0.021,12,0.879,14,1.512,16,0.361,17,0.643,20,0.215,21,0.01,23,1.988,24,1.512,26,0.014,27,0.014,67,0.926,68,1.385,77,2.765,83,1.241,84,1.002,85,0.438,86,1.176,87,1.751,109,2.106,147,2.791,168,2.235,323,2.71,485,3.546,528,3.149,529,3.142,530,6.071,531,4.228,532,3.674,533,5.597,534,5.66,535,3.674,536,3.674,537,3.674,538,3.674,539,3.674,540,3.674,541,3.674,542,4.986,543,3.674,544,4.264,545,3.674,546,4.264,547,3.674,548,3.674,549,3.674,550,3.674,551,3.674,552,4.986,553,3.674,554,3.674]],["title/modules/SeederModule.html",[28,1.287,555,2.485]],["body/modules/SeederModule.html",[3,0.252,4,0.223,5,0.223,11,0.021,16,0.469,17,0.756,20,0.252,21,0.012,26,0.015,27,0.015,28,1.978,29,4.325,30,1.935,31,2.486,39,2.819,40,2.193,41,2.193,43,3.015,44,3.015,60,3.692,481,4.325,528,4.399,533,4.744,555,4.947,556,3.692,557,3.692,558,4.317,559,4.317,560,4.317]],["title/entities/Trackingtime.html",[197,1.962,216,1.439]],["body/entities/Trackingtime.html",[3,0.135,4,0.12,5,0.12,7,0.22,10,1.889,11,0.021,12,1.02,16,0.315,20,0.208,21,0.006,26,0.01,27,0.01,62,3.669,85,0.827,119,1.025,122,1.364,144,2.01,197,1.938,198,2.993,199,1.462,201,3.304,202,1.699,204,3.304,205,3.414,206,1.759,208,1.037,209,3.304,211,4.555,212,4.772,213,5.046,214,3.364,216,1.422,220,2.709,222,1.759,225,2.709,226,4.856,227,2.709,229,2.709,230,1.176,231,1.258,232,1.979,302,3.049,340,2.455,342,2.455,343,2.252,344,2.455,345,2.455,346,2.455,347,2.252,366,1.759,367,1.759,370,1.759,372,1.759,374,1.759,375,1.759,376,1.759,377,1.759,446,1.462,447,1.979,561,1.759,562,3.049,563,4.886,564,4.886,565,3.566,566,2.315,567,2.315,568,2.315,569,2.315,570,2.315,571,2.315,572,2.315,573,2.315,574,2.315,575,2.315,576,2.315,577,3.086,578,4.178,579,1.759,580,2.315,581,2.315,582,3.049,583,2.315,584,2.315,585,2.315,586,2.315,587,1.979,588,1.979,589,1.979,590,1.979,591,1.979,592,3.049,593,1.979,594,1.979,595,2.315,596,2.315,597,1.979,598,2.315,599,2.315]],["title/controllers/TrackingtimeController.html",[0,1.525,600,2.485]],["body/controllers/TrackingtimeController.html",[0,0.978,2,0.978,3,0.135,4,0.12,5,0.12,7,0.22,8,1.082,10,1.517,11,0.021,12,0.819,14,1.6,16,0.455,17,0.405,20,0.135,21,0.006,22,1.258,23,0.923,24,1.6,26,0.01,27,0.01,75,1.594,77,2.74,83,1.65,84,1.332,85,0.582,86,1.563,87,2.328,88,2.994,89,2.455,90,1.594,91,3.364,92,1.352,93,1.352,94,1.037,99,1.594,102,0.826,108,3.633,109,2.064,111,3.52,112,3.633,113,3.03,114,2.768,115,3.633,122,1.59,180,1.037,202,2.656,203,1.594,216,1.734,236,2.083,237,3.086,238,2.252,240,2.252,241,1.352,246,1.979,248,1.462,249,1.979,254,1.462,262,1.759,263,1.759,264,1.462,265,0.978,266,1.759,267,1.352,268,1.759,271,1.594,273,1.594,274,1.759,277,1.759,278,3.719,282,1.759,283,1.979,288,1.594,289,1.759,290,1.759,291,1.759,293,1.979,294,1.979,300,1.594,337,3.503,414,1.594,415,2.455,519,3.719,600,2.455,601,1.979,602,4.766,603,2.315,604,2.315,605,2.315,606,2.315,607,2.315,608,1.979,609,2.315,610,2.315,611,1.979,612,3.086,613,2.315,614,2.315,615,1.979,616,2.364,617,1.979,618,1.594,619,1.979,620,2.315,621,2.315,622,2.315,623,2.315,624,2.315,625,5.276,626,2.315,627,2.315,628,2.315,629,1.979,630,1.759,631,2.315,632,2.315,633,2.315,634,2.315,635,2.315,636,2.315]],["title/modules/TrackingtimeModule.html",[28,1.287,37,2.109]],["body/modules/TrackingtimeModule.html",[2,2.214,3,0.231,4,0.205,5,0.205,11,0.021,16,0.494,17,0.693,20,0.231,21,0.011,26,0.015,27,0.015,28,1.411,30,1.773,31,2.349,36,3.907,37,4.095,38,2.849,39,2.663,40,2.01,41,2.01,43,2.849,44,2.849,49,2.311,50,1.578,139,3.006,154,3.383,216,1.578,307,3.608,600,4.045,616,3.905,617,3.383,637,3.383,638,3.957,639,3.383,640,3.383,641,3.957,642,3.957,643,3.006,644,3.957,645,2.724,646,3.957]],["title/injectables/TrackingtimeService.html",[67,0.67,616,1.962]],["body/injectables/TrackingtimeService.html",[3,0.1,4,0.088,5,0.088,7,0.162,8,0.85,11,0.021,12,0.865,14,1.632,16,0.415,17,0.3,20,0.1,21,0.005,24,1.69,26,0.008,27,0.008,50,0.682,67,0.52,68,0.645,77,2.652,83,1.817,84,1.467,85,0.641,86,1.722,87,1.963,92,0.999,109,2.273,113,2.239,114,2.327,122,1.44,144,1.65,146,2.564,156,1.178,168,1.256,176,1.524,177,1.178,180,2.188,195,1.3,198,2.327,202,2.907,205,2.925,208,2.955,216,2.056,230,0.869,236,1.638,237,2.601,238,1.771,240,1.771,241,1.638,248,1.771,254,1.771,257,2.13,264,1.081,269,2.802,271,1.178,273,1.93,300,2.452,313,2.601,321,1.178,323,1.936,337,3.011,343,2.249,347,1.771,415,1.93,577,1.081,602,4.175,611,2.397,612,2.601,616,1.524,618,1.93,619,1.463,629,1.463,630,1.3,643,1.3,645,1.178,647,1.463,648,2.803,649,2.803,650,1.711,651,1.711,652,2.803,653,2.803,654,1.711,655,1.711,656,1.711,657,1.711,658,2.803,659,1.711,660,2.803,661,3.562,662,4.119,663,1.711,664,4.545,665,1.711,666,3.011,667,1.711,668,1.711,669,1.463,670,1.711,671,1.711,672,1.463,673,2.803,674,1.711,675,3.562,676,1.711,677,1.711,678,2.803,679,2.803,680,3.562,681,4.119,682,1.711,683,1.711,684,1.711,685,1.711,686,1.711,687,1.711,688,2.803,689,1.711,690,1.711,691,1.711,692,1.711,693,1.711,694,1.711,695,1.711,696,1.711,697,1.711,698,1.711,699,1.711,700,1.711,701,1.711,702,1.711,703,1.711,704,2.803,705,2.803,706,2.803,707,1.711,708,1.711,709,1.711,710,2.803,711,1.711,712,1.463,713,1.711,714,1.711,715,1.711,716,1.711,717,1.711,718,1.711,719,1.463,720,1.711,721,1.711,722,1.711,723,1.711,724,1.711,725,1.711,726,1.711,727,1.711,728,1.463,729,1.711,730,1.711,731,1.711,732,1.711,733,1.711,734,1.711]],["title/injectables/TypeOrmConfigService.html",[57,2.485,67,0.67]],["body/injectables/TypeOrmConfigService.html",[3,0.238,4,0.211,5,0.211,7,0.386,8,1.621,10,1.172,11,0.021,12,0.829,14,1.236,16,0.432,17,0.714,20,0.238,21,0.011,23,2.377,24,1.236,26,0.015,27,0.015,46,2.573,50,1.625,57,3.678,67,0.992,68,1.536,85,0.637,119,1.536,121,1.721,153,4.529,156,2.805,158,5.098,199,2.573,323,3.241,405,3.095,408,3.484,735,3.484,736,5.961,737,6.328,738,4.074,739,5.961,740,5.343,741,4.074,742,5.343,743,4.074,744,4.074,745,4.074,746,4.074,747,4.074,748,4.074,749,4.074,750,4.074,751,4.074,752,4.074,753,4.074,754,4.074,755,4.074]],["title/classes/UpdateClientDto.html",[21,0.01,258,2.28]],["body/classes/UpdateClientDto.html",[3,0.283,4,0.25,5,0.25,7,0.459,10,1.393,11,0.02,12,0.752,16,0.432,20,0.283,21,0.017,23,2.576,26,0.017,27,0.017,84,1.762,85,0.577,102,1.727,117,2.045,119,1.715,122,1.541,125,3.679,128,2.842,129,2.17,132,2.842,258,3.766,335,3.679,756,5.099,757,4.843]],["title/classes/UpdatePasswordDTO.html",[21,0.01,758,2.28]],["body/classes/UpdatePasswordDTO.html",[3,0.258,4,0.228,5,0.228,7,0.418,10,1.617,11,0.021,12,0.873,16,0.449,20,0.258,21,0.016,26,0.016,27,0.016,85,0.67,102,1.573,117,1.863,119,1.617,121,2.375,122,1.453,128,2.95,129,1.976,132,2.95,364,3.91,389,4.808,397,3.35,398,3.91,399,3.35,401,4.272,452,3.771,758,3.551,759,3.91,760,3.771,761,5.623,762,4.41,763,4.41,764,4.41]],["title/classes/UpdateStateDto.html",[21,0.01,612,2.28]],["body/classes/UpdateStateDto.html",[3,0.275,4,0.244,5,0.244,7,0.447,10,1.355,11,0.02,12,0.732,16,0.463,20,0.275,21,0.016,26,0.016,27,0.016,85,0.562,102,1.681,117,1.991,119,1.686,128,2.794,129,2.112,132,2.794,216,2.338,396,3.581,562,5.014,577,3.703,597,4.03,612,3.703,643,3.581,765,3.703,766,4.03,767,4.713,768,4.713,769,4.713,770,4.713,771,4.713]],["title/classes/UpdateTrackingtimeDto.html",[21,0.01,666,2.109]],["body/classes/UpdateTrackingtimeDto.html",[3,0.181,4,0.16,5,0.16,7,0.293,10,1.877,11,0.02,12,1.013,16,0.374,20,0.181,21,0.014,26,0.012,27,0.012,85,0.813,86,2.269,102,1.103,117,1.306,119,1.272,122,1.54,128,2.685,129,1.386,132,1.474,205,3.062,208,1.386,339,2.35,340,3.045,341,3.782,342,3.045,343,2.793,344,3.045,345,3.045,346,3.045,347,2.793,360,2.129,361,4.415,362,3.782,363,4.574,364,3.915,666,2.584,765,4.196,772,5.582,773,5.163,774,3.093,775,3.093,776,3.093,777,3.093,778,4.423,779,3.093,780,3.093,781,4.423,782,3.093,783,3.093,784,3.093,785,5.582,786,3.093,787,3.093,788,3.093,789,3.093,790,3.093,791,3.093,792,3.093,793,3.093]],["title/classes/UpdateUserDTO.html",[21,0.01,794,2.28]],["body/classes/UpdateUserDTO.html",[3,0.204,4,0.18,5,0.18,7,0.331,10,1.792,11,0.021,12,0.967,16,0.452,20,0.204,21,0.013,26,0.013,27,0.013,62,2.037,85,0.743,102,1.244,117,1.473,119,1.383,120,2.327,121,2.327,122,1.739,127,3.655,128,1.662,129,1.563,130,3.038,131,2.649,132,1.662,265,2.327,363,4.435,364,3.935,381,2.649,382,3.479,383,3.792,385,2.982,387,2.982,388,2.982,390,2.982,391,3.792,393,4.114,394,2.982,395,2.982,396,2.649,397,2.649,398,3.038,399,2.649,400,2.649,401,2.649,759,4.069,772,5.329,785,5.329,794,3.038,795,3.487,796,4.811,797,3.487,798,3.487,799,3.487]],["title/entities/User.html",[144,1.155,197,1.962]],["body/entities/User.html",[3,0.15,4,0.132,5,0.132,7,0.243,10,1.82,11,0.021,12,0.983,16,0.373,20,0.225,21,0.011,24,0.776,26,0.011,27,0.011,62,3.386,77,1.626,85,0.807,109,1.626,119,1.107,120,1.954,121,1.954,122,1.693,144,1.647,176,1.392,197,2.093,199,1.617,201,3.515,202,2.205,203,3.185,204,3.515,205,2.797,206,1.945,208,1.725,209,3.515,211,4.192,212,4.899,213,4.701,214,4.14,216,2.398,219,3.292,220,2.925,222,1.945,224,1.945,225,2.925,226,4.701,227,2.925,228,2.189,229,2.925,230,1.301,231,1.392,265,1.954,360,1.762,370,1.945,382,2.922,383,3.185,391,1.762,470,1.945,578,2.189,579,2.925,800,1.945,801,2.56,802,2.56,803,2.56,804,2.56,805,2.56,806,2.56,807,2.56,808,3.292,809,2.56,810,3.85,811,3.85,812,2.56,813,2.56,814,3.85,815,2.56,816,2.56,817,2.925,818,3.85,819,3.292,820,2.56,821,2.56,822,2.56,823,3.85,824,2.56,825,2.189,826,3.85,827,2.56,828,2.56,829,2.56,830,2.56]],["title/controllers/UserController.html",[0,1.525,142,2.28]],["body/controllers/UserController.html",[0,0.579,2,0.579,3,0.08,4,0.071,5,0.071,7,0.13,8,0.707,10,1.522,11,0.021,12,0.822,14,1.606,16,0.405,17,0.24,20,0.08,21,0.004,23,0.547,24,1.606,26,0.007,27,0.007,75,0.945,77,2.837,83,1.727,84,1.394,85,0.609,86,1.636,87,2.523,88,2.469,89,1.605,90,0.945,91,0.945,92,0.801,93,0.801,94,0.615,99,0.945,102,0.489,108,3.645,109,2.303,111,3.343,112,3.645,113,3.452,114,3.026,115,3.645,116,4.022,121,0.579,142,1.473,144,1.895,146,1.449,168,0.615,180,1.363,202,2.523,203,2.093,208,2.763,216,1.858,224,1.042,239,1.994,241,1.362,261,1.173,262,1.042,263,1.042,264,0.866,265,0.579,266,1.042,267,0.801,268,1.042,274,1.042,277,1.042,282,1.042,285,1.173,288,1.605,289,1.771,290,1.771,291,1.771,296,1.173,299,3.736,300,3.376,301,3.436,323,0.746,379,2.759,380,0.945,414,0.945,531,0.866,577,0.866,582,1.173,608,3.436,615,1.173,618,0.945,630,2.724,666,2.865,669,1.173,712,1.173,719,1.173,758,2.264,759,1.473,765,0.866,794,2.264,831,1.173,832,2.332,833,2.332,834,2.332,835,2.332,836,3.586,837,2.332,838,2.332,839,2.332,840,3.736,841,1.372,842,1.372,843,1.372,844,1.372,845,1.372,846,1.372,847,3.586,848,1.372,849,1.372,850,1.372,851,1.372,852,1.372,853,1.372,854,1.372,855,1.372,856,1.372,857,1.372,858,1.372,859,1.372,860,1.372,861,1.372,862,1.372,863,3.586,864,2.332,865,1.372,866,1.372,867,1.372,868,1.372,869,1.372,870,1.994,871,1.372,872,1.372,873,1.372,874,1.372,875,4.66,876,1.372,877,1.994,878,1.173,879,1.372,880,1.372,881,3.041,882,1.372,883,1.372,884,3.041,885,1.372,886,1.372,887,4.018,888,1.372,889,1.372,890,1.372,891,1.372,892,2.332,893,2.332,894,2.332,895,4.018,896,3.041,897,1.372,898,1.372,899,1.372,900,1.372,901,1.372,902,1.372,903,1.372,904,1.372,905,1.372,906,1.372,907,1.372,908,1.372,909,1.372,910,1.372,911,1.372,912,1.372,913,1.372,914,1.372,915,1.372]],["title/modules/UserModule.html",[28,1.287,38,1.962]],["body/modules/UserModule.html",[2,2.286,3,0.243,4,0.215,5,0.215,11,0.021,16,0.491,17,0.728,20,0.243,21,0.012,26,0.015,27,0.015,28,1.483,30,1.863,31,2.426,37,3.162,38,3.753,39,2.75,40,2.112,41,2.112,43,2.943,44,2.26,49,2.428,50,1.657,139,3.158,142,3.802,144,1.33,146,3.448,164,3.158,307,3.727,400,3.158,487,3.555,645,2.862,916,3.555,917,3.555,918,3.555,919,4.157,920,4.157,921,4.157]],["title/injectables/UserSeederService.html",[67,0.67,485,2.109]],["body/injectables/UserSeederService.html",[3,0.217,4,0.192,5,0.192,7,0.353,8,1.525,11,0.021,12,0.78,14,1.128,16,0.476,17,0.651,20,0.217,21,0.01,23,1.483,24,1.85,26,0.014,27,0.014,50,1.483,67,0.933,68,1.401,83,1.256,84,1.014,85,0.443,86,1.19,109,1.57,114,1.772,120,1.57,144,1.609,168,2.253,180,1.666,195,2.825,230,1.889,236,3.723,313,3.853,321,2.56,323,2.021,446,2.348,450,3.175,485,2.937,531,2.348,544,3.179,546,3.179,808,4.299,922,3.179,923,3.179,924,3.718,925,4.299,926,3.718,927,3.718,928,3.718,929,3.179,930,3.718,931,3.718,932,3.718,933,3.718,934,3.718,935,3.718,936,3.718,937,3.179,938,3.718,939,3.718,940,3.718,941,3.718,942,3.179,943,3.718,944,3.718]],["title/injectables/UserService.html",[67,0.67,146,1.72]],["body/injectables/UserService.html",[3,0.113,4,0.1,5,0.1,7,0.184,8,0.94,11,0.021,12,0.946,14,1.809,16,0.442,17,0.339,20,0.113,21,0.005,23,1.236,24,1.882,26,0.009,27,0.009,50,0.772,67,0.575,68,0.73,77,2.73,83,2.015,84,1.626,85,0.711,86,1.909,87,2.111,109,2.292,113,2.408,114,2.463,120,1.637,121,1.871,122,1.252,144,1.737,146,1.477,156,1.333,168,1.389,176,3.243,177,2.668,180,1.389,191,2.651,193,1.656,202,2.309,208,2.606,216,0.772,230,0.984,236,1.811,237,2.797,238,1.958,240,1.958,241,1.131,248,1.958,254,1.223,313,2.797,321,1.333,323,1.685,337,1.131,338,1.471,379,3.06,380,1.333,446,1.223,616,3.065,618,2.134,645,1.333,666,3.171,672,1.656,758,3.06,759,1.958,765,1.223,794,3.06,817,2.355,825,2.651,840,2.651,870,1.656,877,2.651,878,1.656,923,1.656,925,2.651,929,1.656,937,2.651,942,1.656,945,1.656,946,3.1,947,3.1,948,3.1,949,3.1,950,1.937,951,3.1,952,1.937,953,1.937,954,1.937,955,3.1,956,1.937,957,1.937,958,1.937,959,1.937,960,1.937,961,1.937,962,1.937,963,1.937,964,1.937,965,1.937,966,1.937,967,1.937,968,1.937,969,1.937,970,1.937,971,3.1,972,3.1,973,3.1,974,3.1,975,1.937,976,1.937,977,1.937,978,1.937,979,1.937,980,1.937,981,1.937,982,1.937,983,1.937,984,1.937,985,1.937,986,1.937,987,1.937,988,1.937,989,1.937,990,1.937,991,1.937,992,1.937,993,3.1,994,1.937,995,1.937,996,1.937,997,1.937,998,1.937,999,1.937,1000,1.937,1001,1.937,1002,1.937,1003,1.937]],["title/coverage.html",[1004,3.743]],["body/coverage.html",[0,2.333,1,1.766,5,0.133,6,2.194,11,0.021,18,1.499,21,0.018,26,0.011,27,0.011,54,1.766,57,1.766,67,1.232,69,2.194,73,1.766,74,2.194,80,1.499,85,0.306,95,1.62,97,1.394,114,1.223,118,2.194,130,1.62,136,1.62,137,1.62,142,1.62,144,1.234,146,1.223,166,2.194,197,2.518,198,1.223,200,2.194,216,1.537,234,1.766,235,2.194,243,1.62,258,1.62,265,1.084,267,1.499,269,1.394,288,5.09,311,2.194,334,2.194,335,2.929,337,1.499,338,1.949,339,2.929,379,1.62,380,1.766,381,2.929,398,1.62,403,2.194,404,2.194,439,2.518,440,1.949,442,2.194,444,1.949,445,2.194,450,1.62,451,2.194,454,1.949,455,2.194,456,2.929,458,2.194,485,1.499,488,1.949,489,2.194,491,2.194,503,1.949,505,2.194,528,1.62,529,2.194,531,1.62,561,1.949,600,1.766,601,2.194,612,1.62,616,1.394,647,2.194,666,1.499,735,2.194,756,2.194,758,1.62,759,2.435,760,2.194,765,2.435,766,2.194,794,1.62,800,2.929,831,2.194,922,2.194,945,2.194,1004,1.949,1005,2.565,1006,2.565,1007,2.565,1008,6.191,1009,3.856,1010,6.018,1011,6.552,1012,3.856,1013,2.194,1014,3.856,1015,2.194,1016,5.151,1017,2.194,1018,2.194,1019,3.856,1020,5.151,1021,2.194,1022,3.297,1023,2.194,1024,3.856,1025,2.565,1026,2.565,1027,2.565,1028,2.565,1029,2.565]],["title/dependencies.html",[31,1.946,1030,2.578]],["body/dependencies.html",[11,0.021,17,0.761,21,0.016,26,0.016,27,0.016,31,1.948,46,2.746,48,3.303,50,1.733,94,1.948,102,1.55,129,1.948,150,3.303,230,2.209,360,2.993,414,2.993,415,2.993,466,4.672,467,3.718,497,3.718,516,3.718,817,3.303,1031,6.861,1032,4.347,1033,4.347,1034,4.347,1035,4.347,1036,4.347,1037,4.347,1038,4.347,1039,4.347,1040,4.347,1041,4.347,1042,4.347,1043,4.347,1044,4.347,1045,4.347,1046,4.347,1047,4.347,1048,4.347,1049,4.347,1050,4.347,1051,4.347,1052,4.347]],["title/miscellaneous/enumerations.html",[1053,1.761,1054,3.713]],["body/miscellaneous/enumerations.html",[7,0.474,11,0.02,26,0.017,27,0.017,144,1.946,391,4.186,561,3.798,577,3.84,587,4.275,588,4.275,589,4.275,590,4.275,591,4.275,592,5.2,593,4.275,594,4.275,800,3.798,819,5.2,1053,2.921,1054,4.275,1055,5,1056,5,1057,5.975]],["title/miscellaneous/functions.html",[1053,1.761,1058,3.713]],["body/miscellaneous/functions.html",[7,0.461,11,0.019,26,0.017,27,0.017,83,2.019,84,1.63,85,0.712,86,1.913,130,3.775,398,3.775,1015,4.157,1017,4.157,1021,4.157,1022,6.035,1023,4.157,1053,2.84,1058,4.157,1059,4.862,1060,4.862,1061,4.862,1062,4.862,1063,4.862,1064,7.057,1065,5.977,1066,4.862]],["title/index.html",[7,0.286,1067,3.014,1068,3.014]],["body/index.html",[4,0.209,11,0.02,26,0.015,27,0.015,313,2.556,1004,3.075,1069,4.048,1070,4.048,1071,5.32,1072,4.048,1073,4.048,1074,4.048,1075,4.048,1076,4.048,1077,4.048,1078,3.461,1079,5.942,1080,4.048,1081,4.048,1082,4.048,1083,6.86,1084,4.048,1085,4.048,1086,4.048,1087,6.73,1088,4.048,1089,4.048,1090,5.32,1091,4.048,1092,4.048,1093,4.048,1094,4.048,1095,5.32,1096,5.32,1097,4.048,1098,4.048,1099,4.048,1100,5.32,1101,5.32,1102,4.048,1103,4.048,1104,4.048,1105,4.048,1106,4.048,1107,3.461,1108,4.048,1109,4.048,1110,4.048,1111,4.048,1112,4.048,1113,4.048,1114,4.048,1115,4.048,1116,4.048,1117,4.048,1118,3.461,1119,4.048,1120,4.048,1121,4.048,1122,4.048,1123,4.048,1124,4.048,1125,3.461]],["title/modules.html",[30,2.208]],["body/modules.html",[11,0.017,26,0.017,27,0.017,29,3.132,30,2.223,35,3.132,36,2.897,37,2.897,38,2.696,481,3.132,555,3.414,1107,6.139,1126,7.179,1127,7.179,1128,7.179]],["title/overview.html",[1129,4.213]],["body/overview.html",[2,1.383,11,0.02,18,3.111,26,0.013,27,0.013,29,4.433,30,1.467,31,2.064,32,2.799,33,2.799,34,2.799,35,4.357,36,3.79,37,3.87,38,3.527,39,2.34,40,1.663,41,1.663,68,1.234,97,2.895,117,1.383,133,2.799,135,2.799,136,3.364,137,3.364,146,3.092,199,2.068,269,3.527,303,2.799,304,2.799,305,2.799,441,2.254,481,3.989,482,2.799,483,2.799,484,2.799,485,3.79,503,2.487,528,3.364,555,4.56,556,2.799,557,2.799,616,3.527,637,2.799,639,2.799,640,2.799,728,2.799,916,2.799,917,2.799,918,2.799,1129,2.799,1130,3.274,1131,3.274,1132,4.604,1133,3.274,1134,3.274]],["title/properties.html",[119,1.249,1030,2.578]],["body/properties.html",[11,0.02,26,0.018,27,0.018,119,1.586,1078,4.715,1118,4.715,1125,4.715,1135,5.514,1136,5.514,1137,5.514]],["title/miscellaneous/variables.html",[1053,1.761,1138,3.713]],["body/miscellaneous/variables.html",[7,0.439,11,0.021,26,0.016,27,0.016,85,0.551,120,2.673,122,1.195,265,2.802,382,3.997,450,2.921,531,3.66,579,4.402,1013,3.955,1018,3.955,1053,2.702,1057,4.955,1138,3.955,1139,4.625,1140,4.625,1141,4.625,1142,4.625,1143,4.625,1144,4.625,1145,6.329,1146,4.625,1147,4.625,1148,4.625,1149,4.625,1150,5.795,1151,4.625,1152,4.625,1153,4.625]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":288,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1136,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":732,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["0.5.1",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":728,"title":{},"body":{"injectables/TrackingtimeService.html":{},"overview.html":{}}}],["1.0.0",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1134,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1133,"title":{},"body":{"overview.html":{}}}],["1h",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["2.2.0",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["23505",{"_index":972,"title":{},"body":{"injectables/UserService.html":{}}}],["24",{"_index":734,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["3",{"_index":1132,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":685,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["404",{"_index":688,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["5",{"_index":1131,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1130,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":828,"title":{},"body":{"entities/User.html":{}}}],["8.7.3",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["admin",{"_index":819,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["already",{"_index":937,"title":{},"body":{"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["amazing",{"_index":1108,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":132,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{}}}],["apiproperty()@iscompanyemail()@isnotempty()@isstring()@isemail",{"_index":384,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isdate()@isnotempty()@type(undefined",{"_index":353,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["apiproperty()@isemail()@iscompanyemail",{"_index":123,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["apiproperty()@isenum(trackingtimestate)@notequals(trackingtimestate.on_pending)@isnotempty",{"_index":767,"title":{},"body":{"classes/UpdateStateDto.html":{}}}],["apiproperty()@isenum(userrole",{"_index":392,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":125,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["apiproperty()@isnotempty()@isnumber",{"_index":350,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":386,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@ispasswordvalid()@isnotempty()@isstring()@minlength(8",{"_index":389,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdatePasswordDTO.html":{}}}],["apiproperty()@isstring()@isnotempty()@validateif(trackingtime",{"_index":355,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["apiproperty()@isstring()@isoptional",{"_index":348,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["apiproperty({required",{"_index":772,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{}}}],["apiproperty({required:false",{"_index":785,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{}}}],["apiresponse",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"authentification",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"client",{"_index":275,"title":{},"body":{"controllers/ClientController.html":{}}}],["apitags(\"trackingtimes",{"_index":620,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["apitags(\"user",{"_index":879,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('authentification')@useguards(undefined)@post('login",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags,apibearerauth",{"_index":274,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["app",{"_index":1085,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1077,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":409,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":808,"title":{},"body":{"entities/User.html":{},"injectables/UserSeederService.html":{}}}],["async",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["attente",{"_index":589,"title":{},"body":{"entities/Trackingtime.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":456,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":73,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["authguard('jwt",{"_index":457,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":490,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authlogindto",{"_index":80,"title":{"classes/AuthLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1118,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":97,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice,localstrategy,jwtstrategy",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["autoloadentities:true",{"_index":753,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["await",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/LocalStrategy.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":1109,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":225,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["bcrypt",{"_index":817,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":830,"title":{},"body":{"entities/User.html":{}}}],["bcrypt.hash(password,8",{"_index":1003,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(this.password",{"_index":827,"title":{},"body":{"entities/User.html":{}}}],["beforeinsert",{"_index":814,"title":{},"body":{"entities/User.html":{}}}],["beforeupdate",{"_index":815,"title":{},"body":{"entities/User.html":{}}}],["between",{"_index":724,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["body",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":514,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1128,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1126,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1072,"title":{},"body":{"index.html":{}}}],["can't",{"_index":719,"title":{},"body":{"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{}}}],["canactivate",{"_index":506,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":510,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cascade",{"_index":220,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["cascade'})@joincolumn({name",{"_index":565,"title":{},"body":{"entities/Trackingtime.html":{}}}],["catch",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["catch(error",{"_index":544,"title":{},"body":{"injectables/Seeder.html":{},"injectables/UserSeederService.html":{}}}],["catch(exception",{"_index":407,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":416,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["change",{"_index":720,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["check",{"_index":935,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthLoginDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":117,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":874,"title":{},"body":{"controllers/UserController.html":{}}}],["client",{"_index":198,"title":{"entities/Client.html":{}},"body":{"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"injectables/TrackingtimeService.html":{},"coverage.html":{}}}],["client.controller",{"_index":308,"title":{},"body":{"modules/ClientModule.html":{}}}],["client.dto",{"_index":272,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["client.dto.ts",{"_index":335,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["client.dto.ts:7",{"_index":757,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:8",{"_index":336,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.service",{"_index":270,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{}}}],["client.trackingtimes",{"_index":302,"title":{},"body":{"controllers/ClientController.html":{},"entities/Trackingtime.html":{}}}],["client/client.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["client:client",{"_index":449,"title":{},"body":{"interfaces/ITrackingtime.html":{}}}],["client_id",{"_index":566,"title":{},"body":{"entities/Trackingtime.html":{}}}],["clientcomment",{"_index":340,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["clientcomment:string",{"_index":377,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{}}}],["clientcomment?:string",{"_index":792,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["clientcontroller",{"_index":234,"title":{"controllers/ClientController.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"coverage.html":{}}}],["clientid",{"_index":341,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["clientid:number",{"_index":378,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["clientid?:number",{"_index":793,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["clientmodule",{"_index":36,"title":{"modules/ClientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/TrackingtimeModule.html":{},"modules.html":{},"overview.html":{}}}],["clientrepository",{"_index":315,"title":{},"body":{"injectables/ClientService.html":{}}}],["clientservice",{"_index":269,"title":{"injectables/ClientService.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/TrackingtimeService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_clientmodule",{"_index":303,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_exports",{"_index":304,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_providers",{"_index":305,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_languageseedermodule",{"_index":482,"title":{},"body":{"modules/LanguageSeederModule.html":{},"overview.html":{}}}],["cluster_languageseedermodule_exports",{"_index":483,"title":{},"body":{"modules/LanguageSeederModule.html":{},"overview.html":{}}}],["cluster_languageseedermodule_providers",{"_index":484,"title":{},"body":{"modules/LanguageSeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":556,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_imports",{"_index":558,"title":{},"body":{"modules/SeederModule.html":{}}}],["cluster_seedermodule_providers",{"_index":557,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_trackingtimemodule",{"_index":637,"title":{},"body":{"modules/TrackingtimeModule.html":{},"overview.html":{}}}],["cluster_trackingtimemodule_exports",{"_index":639,"title":{},"body":{"modules/TrackingtimeModule.html":{},"overview.html":{}}}],["cluster_trackingtimemodule_imports",{"_index":638,"title":{},"body":{"modules/TrackingtimeModule.html":{}}}],["cluster_trackingtimemodule_providers",{"_index":640,"title":{},"body":{"modules/TrackingtimeModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":916,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":917,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":918,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":427,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["column",{"_index":226,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["column()@createdatecolumn",{"_index":206,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["column()@updatedatecolumn",{"_index":222,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["column({type",{"_index":211,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["common/filter/http",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["companycomment",{"_index":342,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["companycomment:string",{"_index":376,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{}}}],["companycomment?:string",{"_index":791,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["completed",{"_index":541,"title":{},"body":{"injectables/Seeder.html":{}}}],["config",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"injectables/TypeOrmConfigService.html":{}}}],["config.get(\"jwt_secret",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/database/typeormconfig.service",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot({isglobal",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TypeOrmConfigService.html":{}}}],["configservice.get(\"jwt_secret",{"_index":475,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":994,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":492,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(clientrepository",{"_index":312,"title":{},"body":{"injectables/ClientService.html":{}}}],["constructor(configservice",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(logger",{"_index":532,"title":{},"body":{"injectables/Seeder.html":{}}}],["constructor(partial",{"_index":822,"title":{},"body":{"entities/User.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrackingtimeController.html":{}}}],["constructor(reflector",{"_index":507,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(trackingtimerepository",{"_index":650,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["constructor(userrepository",{"_index":923,"title":{},"body":{"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":513,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":518,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":520,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('client",{"_index":276,"title":{},"body":{"controllers/ClientController.html":{}}}],["controller('trackingtimes",{"_index":621,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["controller('users",{"_index":880,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":1004,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":236,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":279,"title":{},"body":{"controllers/ClientController.html":{}}}],["create(@req",{"_index":623,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["create(createclientdto",{"_index":242,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["create(createuserdto",{"_index":951,"title":{},"body":{"injectables/UserService.html":{}}}],["create(id_user",{"_index":653,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["create(req",{"_index":603,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["createclientdto",{"_index":243,"title":{"classes/CreateClientDto.html":{}},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"coverage.html":{}}}],["createclientdto):promise",{"_index":324,"title":{},"body":{"injectables/ClientService.html":{}}}],["created",{"_index":550,"title":{},"body":{"injectables/Seeder.html":{}}}],["createdat",{"_index":201,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":227,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["createdlanguages.filter",{"_index":551,"title":{},"body":{"injectables/Seeder.html":{}}}],["createtrackingtimedto",{"_index":337,"title":{"classes/CreateTrackingtimeDto.html":{}},"body":{"classes/CreateTrackingtimeDto.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createtrackingtimedto.clientcomment",{"_index":700,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["createtrackingtimedto.companycomment",{"_index":698,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["createtrackingtimedto.end_date",{"_index":675,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["createtrackingtimedto.nbdays",{"_index":694,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["createtrackingtimedto.nbhalfdays",{"_index":678,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["createtrackingtimedto.nbhours",{"_index":679,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["createtrackingtimedto.start_date",{"_index":691,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["createtypeormoptions",{"_index":737,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["createuserdto",{"_index":379,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusers",{"_index":832,"title":{},"body":{"controllers/UserController.html":{}}}],["createusers(@body",{"_index":885,"title":{},"body":{"controllers/UserController.html":{}}}],["createusers(createuserdto",{"_index":841,"title":{},"body":{"controllers/UserController.html":{}}}],["ctx",{"_index":417,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":420,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":419,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":997,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":928,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["database",{"_index":747,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["date",{"_index":205,"title":{},"body":{"entities/Client.html":{},"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateTrackingtimeDto.html":{},"entities/User.html":{}}}],["day",{"_index":682,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["days",{"_index":664,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["dd",{"_index":431,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["de",{"_index":590,"title":{},"body":{"entities/Trackingtime.html":{},"miscellaneous/enumerations.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":579,"title":{},"body":{"entities/Trackingtime.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["default:trackingtimestate.on_pending",{"_index":596,"title":{},"body":{"entities/Trackingtime.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":263,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["delete('/:id",{"_index":906,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/:id')@roles('admin",{"_index":849,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/:id/trackingtimes/id_tt",{"_index":909,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/:id/trackingtimes/id_tt')@roles('admin",{"_index":845,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":293,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{}}}],["deleted",{"_index":912,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteonetrackingtime",{"_index":833,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteonetrackingtime(@param",{"_index":910,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteonetrackingtime(params",{"_index":844,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":834,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(@param('id",{"_index":907,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":848,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1078,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":1086,"title":{},"body":{"index.html":{}}}],["different",{"_index":995,"title":{},"body":{"injectables/UserService.html":{}}}],["dist/**/*.entity.{ts,js",{"_index":752,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["documentation",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":939,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["dto/create",{"_index":271,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{}}}],["dto/update",{"_index":273,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{}}}],["e",{"_index":974,"title":{},"body":{"injectables/UserService.html":{}}}],["e.code",{"_index":971,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":1097,"title":{},"body":{"index.html":{}}}],["each",{"_index":393,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["eager",{"_index":219,"title":{},"body":{"entities/Client.html":{},"entities/User.html":{}}}],["efficient",{"_index":1073,"title":{},"body":{"index.html":{}}}],["email",{"_index":120,"title":{},"body":{"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["email,password",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["en",{"_index":588,"title":{},"body":{"entities/Trackingtime.html":{},"miscellaneous/enumerations.html":{}}}],["end_date",{"_index":343,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["end_date:date",{"_index":367,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{}}}],["end_date?:date",{"_index":787,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["entities",{"_index":199,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/client.entity",{"_index":309,"title":{},"body":{"modules/ClientModule.html":{},"injectables/ClientService.html":{}}}],["entities/trackingtime.entity",{"_index":643,"title":{},"body":{"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateStateDto.html":{}}}],["entities/user.entity",{"_index":400,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{},"modules/UserModule.html":{}}}],["entity",{"_index":197,"title":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":578,"title":{},"body":{"entities/Trackingtime.html":{},"entities/User.html":{}}}],["enumerations",{"_index":1054,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["error.code",{"_index":625,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["error.status",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["exception",{"_index":411,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["exception.filter.ts",{"_index":404,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:7",{"_index":410,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":424,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus()?exception.getstatus():httpstatus.internal_server_error",{"_index":422,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":406,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":818,"title":{},"body":{"entities/User.html":{}}}],["execute",{"_index":716,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["executioncontext",{"_index":511,"title":{},"body":{"guards/RolesGuard.html":{}}}],["exist",{"_index":973,"title":{},"body":{"injectables/UserService.html":{}}}],["exists",{"_index":938,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["expiresin",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":307,"title":{},"body":{"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":414,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["exresp",{"_index":423,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exresp[\"message\"]?exresp[\"message\"]:exception.message",{"_index":438,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["extends",{"_index":231,"title":{},"body":{"entities/Client.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["extractjwt,strategy",{"_index":465,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":472,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":214,"title":{},"body":{"entities/Client.html":{},"injectables/JwtStrategy.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["false})@exclude",{"_index":806,"title":{},"body":{"entities/User.html":{}}}],["false})@iscompanyemail()@isoptional()@isstring()@isemail",{"_index":795,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["false})@isdate()@isoptional()@type(undefined",{"_index":778,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["false})@isenum(userrole",{"_index":798,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["false})@isnotempty()@isnumber()@isoptional",{"_index":775,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["false})@isoptional()@isstring",{"_index":796,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["false})@ispasswordvalid()@isoptional()@isstring()@minlength(8",{"_index":797,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["false})@isstring()@isnotempty()@isoptional",{"_index":781,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["false})@isstring()@isoptional",{"_index":773,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["fields",{"_index":290,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":237,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{}}}],["findall():promise",{"_index":328,"title":{},"body":{"injectables/ClientService.html":{}}}],["findone",{"_index":238,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":283,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{}}}],["findone(id",{"_index":248,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{}}}],["findoneby",{"_index":932,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["findonebyemail",{"_index":946,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyemail(email",{"_index":955,"title":{},"body":{"injectables/UserService.html":{}}}],["findusersbyid",{"_index":835,"title":{},"body":{"controllers/UserController.html":{}}}],["findusersbyid(@param('id",{"_index":883,"title":{},"body":{"controllers/UserController.html":{}}}],["findusersbyid(id",{"_index":851,"title":{},"body":{"controllers/UserController.html":{}}}],["firstname",{"_index":382,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["forwardref",{"_index":645,"title":{},"body":{"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["found",{"_index":300,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{}}}],["framework",{"_index":1071,"title":{},"body":{"index.html":{}}}],["function",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1058,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":282,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["get(':id')@useinterceptors(classserializerinterceptor)@roles('admin",{"_index":852,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id/trackingtimes",{"_index":296,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["get(':id/trackingtimes')@roles('admin",{"_index":860,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id/trackingtimes/:id_tt",{"_index":890,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id/trackingtimes/:id_tt')@roles('admin",{"_index":855,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@useinterceptors(classserializerinterceptor)@roles('admin",{"_index":857,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmany",{"_index":707,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["getone",{"_index":709,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["getonetrackingtime",{"_index":239,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["getonetrackingtime(@param",{"_index":891,"title":{},"body":{"controllers/UserController.html":{}}}],["getonetrackingtime(@param(\"id",{"_index":297,"title":{},"body":{"controllers/ClientController.html":{}}}],["getonetrackingtime(id",{"_index":251,"title":{},"body":{"controllers/ClientController.html":{}}}],["getonetrackingtime(params",{"_index":854,"title":{},"body":{"controllers/UserController.html":{}}}],["getperioddays",{"_index":648,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["getperioddays(start_date",{"_index":658,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["getting",{"_index":1067,"title":{"index.html":{}},"body":{}}],["gettotalindays",{"_index":649,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["gettotalindays(days",{"_index":660,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["getusers",{"_index":836,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserstrackingtimes",{"_index":837,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserstrackingtimes(@param('id",{"_index":888,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserstrackingtimes(id",{"_index":859,"title":{},"body":{"controllers/UserController.html":{}}}],["giving",{"_index":729,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["greater",{"_index":683,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["grow",{"_index":1104,"title":{},"body":{"index.html":{}}}],["guard",{"_index":503,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":504,"title":{},"body":{"guards/RolesGuard.html":{}}}],["gungor.salih@teampify.com",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["halfdays",{"_index":661,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["hashpassword",{"_index":825,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["hashpassword(password",{"_index":957,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword(password:string",{"_index":1002,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole",{"_index":522,"title":{},"body":{"guards/RolesGuard.html":{}}}],["here",{"_index":1115,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":432,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host",{"_index":408,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/TypeOrmConfigService.html":{}}}],["host.switchtohttp",{"_index":418,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["hours",{"_index":662,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["httpexception",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{}}}],["httpexception(\"the",{"_index":680,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["httpexception(\"there",{"_index":289,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["httpexception(\"trackingtime",{"_index":629,"title":{},"body":{"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{}}}],["httpexception(\"user",{"_index":299,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["httpexception(`trackingtime",{"_index":896,"title":{},"body":{"controllers/UserController.html":{}}}],["httpexception(error.message",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["httpexceptionfilter",{"_index":54,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":1122,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":264,"title":{},"body":{"controllers/ClientController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{}}}],["httpstatus.bad_request",{"_index":291,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["httpstatus.not_found",{"_index":630,"title":{},"body":{"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{}}}],["httpstatus.unauthorized",{"_index":301,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["iclient",{"_index":440,"title":{"interfaces/IClient.html":{}},"body":{"interfaces/IClient.html":{},"coverage.html":{}}}],["id",{"_index":202,"title":{},"body":{"entities/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:number",{"_index":232,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{}}}],["id_tt",{"_index":870,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id_user",{"_index":655,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["identifier",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["if(!trackingtime)throw",{"_index":628,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["if(!user",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(await",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["if(updatepassworddto.password",{"_index":991,"title":{},"body":{"injectables/UserService.html":{}}}],["if(updateuserdto.password",{"_index":983,"title":{},"body":{"injectables/UserService.html":{}}}],["ignoreexpiration",{"_index":473,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":405,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"injectables/TypeOrmConfigService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITrackingtime.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{}}}],["including",{"_index":726,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserService.html":{}}}],["inject(configservice",{"_index":740,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["inject(forwardref",{"_index":672,"title":{},"body":{"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":67,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/Seeder.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/Seeder.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":321,"title":{},"body":{"injectables/ClientService.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["injectrepository(client",{"_index":322,"title":{},"body":{"injectables/ClientService.html":{}}}],["injectrepository(trackingtime",{"_index":671,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["injectrepository(user",{"_index":929,"title":{},"body":{"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":1082,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1084,"title":{},"body":{"index.html":{}}}],["interface",{"_index":439,"title":{"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{}},"body":{"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":441,"title":{},"body":{"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"overview.html":{}}}],["iscompanyemail",{"_index":130,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscompanyemail(validationoptions",{"_index":1063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdate",{"_index":361,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["isemail",{"_index":127,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["isenum",{"_index":396,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateUserDTO.html":{}}}],["isenum(trackingtimestate",{"_index":770,"title":{},"body":{"classes/UpdateStateDto.html":{}}}],["isenum(userrole",{"_index":799,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["isenum(userrole,{each:true",{"_index":402,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":128,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{}}}],["isnumber",{"_index":362,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["isoptional",{"_index":363,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{}}}],["ispasswordvalid",{"_index":398,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateUserDTO.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ispasswordvalid(validationoptions",{"_index":1066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isstring",{"_index":364,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{}}}],["it's",{"_index":913,"title":{},"body":{"controllers/UserController.html":{}}}],["item",{"_index":525,"title":{},"body":{"guards/RolesGuard.html":{}}}],["itrackingtime",{"_index":444,"title":{"interfaces/ITrackingtime.html":{}},"body":{"interfaces/ITrackingtime.html":{},"coverage.html":{}}}],["iuser",{"_index":450,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"injectables/UserSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["james",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jean",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jean.dupont@teampify.com",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1111,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":585,"title":{},"body":{"entities/Trackingtime.html":{}}}],["joincolumn({name:\"client_id",{"_index":599,"title":{},"body":{"entities/Trackingtime.html":{}}}],["joincolumn({name:\"user_id",{"_index":598,"title":{},"body":{"entities/Trackingtime.html":{}}}],["json",{"_index":426,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["jwt",{"_index":467,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":454,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtservice:jwtservice",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":136,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1119,"title":{},"body":{"index.html":{}}}],["language",{"_index":936,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["languageseedermodule",{"_index":481,"title":{"modules/LanguageSeederModule.html":{}},"body":{"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["languageseederservice",{"_index":534,"title":{},"body":{"injectables/Seeder.html":{}}}],["lastname",{"_index":383,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{}}}],["lastname:'dupont",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastname:'gungor",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastname:'lebron",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lebron.james@teampify.com",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leftjoinandselect(\"trackingtime.client",{"_index":706,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["leftjoinandselect(\"trackingtime.user",{"_index":705,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["length",{"_index":553,"title":{},"body":{"injectables/Seeder.html":{}}}],["license",{"_index":1125,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1101,"title":{},"body":{"index.html":{}}}],["linked",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["literal",{"_index":463,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":497,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":488,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":137,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":533,"title":{},"body":{"injectables/Seeder.html":{},"modules/SeederModule.html":{}}}],["login",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(authlogindto",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["login.dto.ts",{"_index":118,"title":{},"body":{"classes/AuthLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:13",{"_index":126,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["login.dto.ts:9",{"_index":124,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["manytoone",{"_index":586,"title":{},"body":{"entities/Trackingtime.html":{}}}],["manytoone(type",{"_index":563,"title":{},"body":{"entities/Trackingtime.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":437,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":435,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":397,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["minlength(8",{"_index":401,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["miscellaneous",{"_index":1053,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1100,"title":{},"body":{"index.html":{}}}],["mm",{"_index":430,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["mode",{"_index":1090,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{}}}],["module,forwardref",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":415,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"dependencies.html":{}}}],["moment().format('yyyy",{"_index":429,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["moment(end_date).diff(moment(start_date",{"_index":727,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["more",{"_index":1114,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1120,"title":{},"body":{"index.html":{}}}],["name",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateClientDto.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name:string",{"_index":443,"title":{},"body":{"interfaces/IClient.html":{}}}],["nbdays",{"_index":344,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["nbdays:string",{"_index":372,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{}}}],["nbdays?:string",{"_index":788,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["nbdaysbyperiod",{"_index":673,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["nbhalfdays",{"_index":345,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["nbhalfdays:string",{"_index":374,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{}}}],["nbhalfdays?:string",{"_index":789,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["nbhours",{"_index":346,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["nbhours:string",{"_index":375,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{}}}],["nbhours?:string",{"_index":790,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["nest",{"_index":1079,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1124,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TypeOrmConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ClientController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"controllers/ClientController.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"controllers/TrackingtimeController.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"modules/LanguageSeederModule.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newclient",{"_index":325,"title":{},"body":{"injectables/ClientService.html":{}}}],["newpasswordhashed",{"_index":999,"title":{},"body":{"injectables/UserService.html":{}}}],["newtrackingtime",{"_index":689,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.client",{"_index":701,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.clientcomment",{"_index":699,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.companycomment",{"_index":697,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.end_date",{"_index":692,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.nbdays",{"_index":693,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.nbhalfdays",{"_index":695,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.nbhours",{"_index":696,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.save",{"_index":703,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.start_date",{"_index":690,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newtrackingtime.user",{"_index":702,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["newuser",{"_index":942,"title":{},"body":{"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["node.js",{"_index":1070,"title":{},"body":{"index.html":{}}}],["notequals",{"_index":769,"title":{},"body":{"classes/UpdateStateDto.html":{}}}],["notequals(trackingtimestate.on_pending",{"_index":771,"title":{},"body":{"classes/UpdateStateDto.html":{}}}],["npm",{"_index":1083,"title":{},"body":{"index.html":{}}}],["null",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["nullable",{"_index":213,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["nullvalueorcreatedlanguage",{"_index":552,"title":{},"body":{"injectables/Seeder.html":{}}}],["number",{"_index":208,"title":{},"body":{"entities/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateTrackingtimeDto.html":{},"entities/Trackingtime.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateTrackingtimeDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["number):promise",{"_index":330,"title":{},"body":{"injectables/ClientService.html":{}}}],["object",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["object.assign(this",{"_index":824,"title":{},"body":{"entities/User.html":{}}}],["object.keys(updateclientdto).length",{"_index":287,"title":{},"body":{"controllers/ClientController.html":{}}}],["object.keys(updatestate).length",{"_index":633,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["object.keys(updatetrackingtimedto).length",{"_index":904,"title":{},"body":{"controllers/UserController.html":{}}}],["object.keys(updateuser).length",{"_index":898,"title":{},"body":{"controllers/UserController.html":{}}}],["observable",{"_index":515,"title":{},"body":{"guards/RolesGuard.html":{}}}],["on_pending",{"_index":587,"title":{},"body":{"entities/Trackingtime.html":{},"miscellaneous/enumerations.html":{}}}],["ondelete",{"_index":564,"title":{},"body":{"entities/Trackingtime.html":{}}}],["one",{"_index":940,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["onetomany",{"_index":228,"title":{},"body":{"entities/Client.html":{},"entities/User.html":{}}}],["onetomany(type",{"_index":810,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":217,"title":{},"body":{"entities/Client.html":{}}}],["open",{"_index":1102,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateTrackingtimeDto.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1129,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1030,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":262,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":847,"title":{},"body":{"controllers/UserController.html":{}}}],["params.id_tt",{"_index":895,"title":{},"body":{"controllers/UserController.html":{}}}],["parseint(days",{"_index":730,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["parseint(halfdays",{"_index":731,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["parseint(hours",{"_index":733,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["parseintpipe",{"_index":875,"title":{},"body":{"controllers/UserController.html":{}}}],["partial",{"_index":823,"title":{},"body":{"entities/User.html":{}}}],["passport",{"_index":466,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":468,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":469,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":121,"title":{},"body":{"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password')@roles('admin",{"_index":865,"title":{},"body":{"controllers/UserController.html":{}}}],["password.dto",{"_index":878,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password.dto.ts",{"_index":760,"title":{},"body":{"classes/UpdatePasswordDTO.html":{},"coverage.html":{}}}],["password.dto.ts:11",{"_index":762,"title":{},"body":{"classes/UpdatePasswordDTO.html":{}}}],["password.dto.ts:18",{"_index":763,"title":{},"body":{"classes/UpdatePasswordDTO.html":{}}}],["password:\"test12345",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password:string",{"_index":452,"title":{},"body":{"interfaces/IUser.html":{},"classes/UpdatePasswordDTO.html":{}}}],["passwordconfirm",{"_index":761,"title":{},"body":{"classes/UpdatePasswordDTO.html":{}}}],["passwordconfirm:string",{"_index":764,"title":{},"body":{"classes/UpdatePasswordDTO.html":{}}}],["passwordfield",{"_index":499,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":261,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":285,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@roles('admin",{"_index":872,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id/trackingtimes/:id_tt",{"_index":902,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id/trackingtimes/:id_tt')@roles('admin",{"_index":868,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":433,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["payload",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["payload.email",{"_index":477,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.roles",{"_index":480,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":479,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":721,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["period",{"_index":684,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["pg",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":1112,"title":{},"body":{"index.html":{}}}],["port",{"_index":745,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["post",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useinterceptors(classserializerinterceptor)@roles('admin",{"_index":842,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres",{"_index":743,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["prefix",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":209,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["private",{"_index":323,"title":{},"body":{"injectables/ClientService.html":{},"injectables/Seeder.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1092,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1069,"title":{},"body":{"index.html":{}}}],["project",{"_index":1103,"title":{},"body":{"index.html":{}}}],["promise",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/TrackingtimeService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["promise.all(this.languageseederservice.create",{"_index":547,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.reject(error",{"_index":546,"title":{},"body":{"injectables/Seeder.html":{},"injectables/UserSeederService.html":{}}}],["promise.resolve(completed",{"_index":543,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.resolve(null",{"_index":941,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["promise.resolve(true",{"_index":554,"title":{},"body":{"injectables/Seeder.html":{}}}],["properties",{"_index":119,"title":{"properties.html":{}},"body":{"classes/AuthLoginDto.html":{},"entities/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"entities/Trackingtime.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"properties.html":{}}}],["provide",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":736,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["put",{"_index":615,"title":{},"body":{"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":631,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["put(':id/reset",{"_index":864,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":1113,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":508,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refus",{"_index":594,"title":{},"body":{"entities/Trackingtime.html":{},"miscellaneous/enumerations.html":{}}}],["reject",{"_index":593,"title":{},"body":{"entities/Trackingtime.html":{},"miscellaneous/enumerations.html":{}}}],["remove",{"_index":240,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":294,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{}}}],["remove(id",{"_index":254,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{}}}],["remove(id:number",{"_index":978,"title":{},"body":{"injectables/UserService.html":{}}}],["removeonetrackingtime",{"_index":947,"title":{},"body":{"injectables/UserService.html":{}}}],["removeonetrackingtime(id_tt",{"_index":960,"title":{},"body":{"injectables/UserService.html":{}}}],["removeonetrackingtime(id_tt:number",{"_index":980,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":313,"title":{},"body":{"injectables/ClientService.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":519,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/TrackingtimeController.html":{}}}],["req.user",{"_index":521,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["request.method",{"_index":436,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.url",{"_index":434,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":838,"title":{},"body":{"controllers/UserController.html":{}}}],["resetpassword(@param('id",{"_index":900,"title":{},"body":{"controllers/UserController.html":{}}}],["resetpassword(id",{"_index":862,"title":{},"body":{"controllers/UserController.html":{}}}],["response",{"_index":413,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserSeederService.html":{}}}],["result.raw[0",{"_index":717,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":715,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":526,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles",{"_index":265,"title":{},"body":{"controllers/ClientController.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrackingtimeController.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(\"admin",{"_index":278,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{}}}],["roles(\"admin\",\"user",{"_index":635,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["roles(\"user",{"_index":622,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["roles('admin",{"_index":608,"title":{},"body":{"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["roles('admin')@delete(':id",{"_index":255,"title":{},"body":{"controllers/ClientController.html":{}}}],["roles('admin')@get",{"_index":246,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{}}}],["roles('admin')@get(':id",{"_index":249,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{}}}],["roles('admin')@get(':id/trackingtimes",{"_index":252,"title":{},"body":{"controllers/ClientController.html":{}}}],["roles('admin')@patch(':id",{"_index":259,"title":{},"body":{"controllers/ClientController.html":{}}}],["roles('admin')@post",{"_index":244,"title":{},"body":{"controllers/ClientController.html":{}}}],["roles('admin')@put(':id",{"_index":613,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["roles('admin','user",{"_index":887,"title":{},"body":{"controllers/UserController.html":{}}}],["roles('user')@post",{"_index":604,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["roles.find(item",{"_index":524,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles:[\"admin",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles:['admin",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles:string",{"_index":453,"title":{},"body":{"interfaces/IUser.html":{}}}],["rolesguard",{"_index":267,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/ClientController.html":{},"guards/RolesGuard.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["run",{"_index":1087,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":516,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["salih",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":998,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":1074,"title":{},"body":{"index.html":{}}}],["secret",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":474,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seed",{"_index":530,"title":{},"body":{"injectables/Seeder.html":{}}}],["seeder",{"_index":528,"title":{"injectables/Seeder.html":{}},"body":{"injectables/Seeder.html":{},"modules/SeederModule.html":{},"coverage.html":{},"overview.html":{}}}],["seedermodule",{"_index":555,"title":{"modules/SeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["seeding",{"_index":542,"title":{},"body":{"injectables/Seeder.html":{}}}],["server",{"_index":1075,"title":{},"body":{"index.html":{}}}],["setmetadata('roles",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setpassword",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["setpassword(user",{"_index":962,"title":{},"body":{"injectables/UserService.html":{}}}],["setpassword(user:user,updatepassworddto:updatepassworddto",{"_index":990,"title":{},"body":{"injectables/UserService.html":{}}}],["side",{"_index":1076,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":1106,"title":{},"body":{"index.html":{}}}],["src/.../data.ts",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email.validator.ts",{"_index":1061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":1062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seed.ts",{"_index":1060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../trackingtime.entity.ts",{"_index":1055,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.entity.ts",{"_index":1056,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":560,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/app.module.ts",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.service.ts",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/guard/jwt",{"_index":455,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/local",{"_index":489,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/roles.guard",{"_index":268,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["src/auth/guard/roles.guard.ts",{"_index":505,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guard/roles.guard.ts:6",{"_index":509,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guard/roles.guard.ts:8",{"_index":512,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:16",{"_index":464,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:7",{"_index":461,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":491,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:16",{"_index":495,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:8",{"_index":493,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/client/client.controller.ts",{"_index":235,"title":{},"body":{"controllers/ClientController.html":{},"coverage.html":{}}}],["src/client/client.controller.ts:19",{"_index":245,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:29",{"_index":247,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:39",{"_index":250,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:49",{"_index":260,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:60",{"_index":256,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:70",{"_index":253,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.module",{"_index":644,"title":{},"body":{"modules/TrackingtimeModule.html":{}}}],["src/client/client.module.ts",{"_index":306,"title":{},"body":{"modules/ClientModule.html":{}}}],["src/client/client.service",{"_index":670,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/client/client.service.ts",{"_index":311,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/client/client.service.ts:13",{"_index":316,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:18",{"_index":317,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:22",{"_index":318,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:26",{"_index":320,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:30",{"_index":319,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:9",{"_index":314,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/dto/create",{"_index":334,"title":{},"body":{"classes/CreateClientDto.html":{},"coverage.html":{}}}],["src/client/dto/update",{"_index":756,"title":{},"body":{"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["src/client/entities/client.entity",{"_index":447,"title":{},"body":{"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{}}}],["src/client/entities/client.entity.ts",{"_index":200,"title":{},"body":{"entities/Client.html":{},"coverage.html":{}}}],["src/client/entities/client.entity.ts:14",{"_index":215,"title":{},"body":{"entities/Client.html":{}}}],["src/client/entities/client.entity.ts:18",{"_index":207,"title":{},"body":{"entities/Client.html":{}}}],["src/client/entities/client.entity.ts:22",{"_index":223,"title":{},"body":{"entities/Client.html":{}}}],["src/client/entities/client.entity.ts:25",{"_index":221,"title":{},"body":{"entities/Client.html":{}}}],["src/client/entities/client.entity.ts:8",{"_index":210,"title":{},"body":{"entities/Client.html":{}}}],["src/common/decorators/roles.decorator",{"_index":266,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":1013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filter/http",{"_index":403,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/validator/email.validator",{"_index":131,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["src/common/validator/email.validator.ts",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/validator/password.validator",{"_index":399,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["src/common/validator/password.validator.ts",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/config/database/typeormconfig.service.ts",{"_index":735,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["src/config/database/typeormconfig.service.ts:10",{"_index":738,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/config/database/typeormconfig.service.ts:8",{"_index":741,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/database/seeders/seeder.module.ts",{"_index":559,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/database/seeders/seeder.ts",{"_index":529,"title":{},"body":{"injectables/Seeder.html":{},"coverage.html":{}}}],["src/database/seeders/seeder.ts:10",{"_index":536,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:21",{"_index":537,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:5",{"_index":535,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/user/data.ts",{"_index":1018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/user/user.module.ts",{"_index":486,"title":{},"body":{"modules/LanguageSeederModule.html":{}}}],["src/database/seeders/user/user.service.ts",{"_index":922,"title":{},"body":{"injectables/UserSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/user/user.service.ts:15",{"_index":926,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["src/database/seeders/user/user.service.ts:9",{"_index":924,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["src/interfaces/client.interface.ts",{"_index":442,"title":{},"body":{"interfaces/IClient.html":{},"coverage.html":{}}}],["src/interfaces/trackingtime.interface.ts",{"_index":445,"title":{},"body":{"interfaces/ITrackingtime.html":{},"coverage.html":{}}}],["src/interfaces/user.interface",{"_index":927,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["src/interfaces/user.interface.ts",{"_index":451,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1021,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/seed.ts",{"_index":1023,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/trackingtime/dto/create",{"_index":338,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/trackingtime/dto/update",{"_index":765,"title":{},"body":{"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/trackingtime/entities/trackingtime.entity",{"_index":224,"title":{},"body":{"entities/Client.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts",{"_index":561,"title":{},"body":{"entities/Trackingtime.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:15",{"_index":572,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:21",{"_index":576,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:27",{"_index":571,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:33",{"_index":573,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:39",{"_index":574,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:45",{"_index":575,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:51",{"_index":569,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:57",{"_index":568,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:64",{"_index":580,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:68",{"_index":570,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:72",{"_index":581,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:78",{"_index":584,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/entities/trackingtime.entity.ts:84",{"_index":567,"title":{},"body":{"entities/Trackingtime.html":{}}}],["src/trackingtime/trackingtime.controller.ts",{"_index":601,"title":{},"body":{"controllers/TrackingtimeController.html":{},"coverage.html":{}}}],["src/trackingtime/trackingtime.controller.ts:21",{"_index":605,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["src/trackingtime/trackingtime.controller.ts:31",{"_index":606,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["src/trackingtime/trackingtime.controller.ts:41",{"_index":607,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["src/trackingtime/trackingtime.controller.ts:53",{"_index":614,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["src/trackingtime/trackingtime.controller.ts:64",{"_index":610,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["src/trackingtime/trackingtime.module",{"_index":920,"title":{},"body":{"modules/UserModule.html":{}}}],["src/trackingtime/trackingtime.module.ts",{"_index":641,"title":{},"body":{"modules/TrackingtimeModule.html":{}}}],["src/trackingtime/trackingtime.service",{"_index":968,"title":{},"body":{"injectables/UserService.html":{}}}],["src/trackingtime/trackingtime.service.ts",{"_index":647,"title":{},"body":{"injectables/TrackingtimeService.html":{},"coverage.html":{}}}],["src/trackingtime/trackingtime.service.ts:104",{"_index":663,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/trackingtime/trackingtime.service.ts:13",{"_index":651,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/trackingtime/trackingtime.service.ts:21",{"_index":654,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/trackingtime/trackingtime.service.ts:56",{"_index":656,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/trackingtime/trackingtime.service.ts:63",{"_index":657,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/trackingtime/trackingtime.service.ts:73",{"_index":667,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/trackingtime/trackingtime.service.ts:88",{"_index":665,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/trackingtime/trackingtime.service.ts:94",{"_index":668,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/trackingtime/trackingtime.service.ts:99",{"_index":659,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["src/user/dto/create",{"_index":380,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":759,"title":{},"body":{"classes/UpdatePasswordDTO.html":{},"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":446,"title":{},"body":{"interfaces/ITrackingtime.html":{},"modules/LanguageSeederModule.html":{},"entities/Trackingtime.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":800,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/user/entities/user.entity.ts:16",{"_index":804,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:22",{"_index":803,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:28",{"_index":805,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:34",{"_index":802,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:41",{"_index":807,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:48",{"_index":809,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:52",{"_index":801,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:56",{"_index":813,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:60",{"_index":812,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":831,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:108",{"_index":866,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:120",{"_index":869,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:131",{"_index":850,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:141",{"_index":846,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:26",{"_index":858,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":853,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:53",{"_index":843,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:63",{"_index":861,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:79",{"_index":856,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:95",{"_index":873,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/TrackingtimeModule.html":{}}}],["src/user/user.module.ts",{"_index":919,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":669,"title":{},"body":{"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{}}}],["src/user/user.service.ts",{"_index":945,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":950,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:21",{"_index":952,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":953,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:37",{"_index":954,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:41",{"_index":956,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:45",{"_index":959,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:49",{"_index":961,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:53",{"_index":967,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:66",{"_index":965,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:70",{"_index":963,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:81",{"_index":958,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":1088,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1091,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1093,"title":{},"body":{"index.html":{}}}],["start_date",{"_index":347,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateTrackingtimeDto.html":{}}}],["start_date:date",{"_index":366,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"interfaces/ITrackingtime.html":{},"entities/Trackingtime.html":{}}}],["start_date?:date",{"_index":786,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["started",{"_index":1068,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1081,"title":{},"body":{"index.html":{}}}],["state",{"_index":562,"title":{},"body":{"entities/Trackingtime.html":{},"classes/UpdateStateDto.html":{}}}],["state.dto",{"_index":619,"title":{},"body":{"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{}}}],["state.dto.ts",{"_index":766,"title":{},"body":{"classes/UpdateStateDto.html":{},"coverage.html":{}}}],["state.dto.ts:10",{"_index":768,"title":{},"body":{"classes/UpdateStateDto.html":{}}}],["state:trackingtimestate",{"_index":597,"title":{},"body":{"entities/Trackingtime.html":{},"classes/UpdateStateDto.html":{}}}],["statements",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":421,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["status(status",{"_index":425,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":1116,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":496,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["string",{"_index":122,"title":{},"body":{"classes/AuthLoginDto.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["string,sub:number,roles:string",{"_index":476,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sub",{"_index":478,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super",{"_index":470,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{}}}],["support",{"_index":1107,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1127,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":754,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["table",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":1096,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1099,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1098,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1095,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1105,"title":{},"body":{"index.html":{}}}],["then(completed",{"_index":539,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdlanguages",{"_index":548,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(result",{"_index":934,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(authlogindto",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":502,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.clientrepository.create(createclientdto",{"_index":326,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.delete({id",{"_index":333,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.find",{"_index":329,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.findoneby({id",{"_index":331,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.save(newclient",{"_index":327,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.update({id},updateclientdto",{"_index":332,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientservice.create(createclientdto",{"_index":280,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.findall",{"_index":281,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.findone(+id",{"_index":284,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.findone(createtrackingtimedto.clientid",{"_index":686,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.clientservice.findone(id).then((client",{"_index":298,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.remove(+id",{"_index":295,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.update(+id",{"_index":292,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.config.get('db_host",{"_index":744,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.config.get('db_name",{"_index":748,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.config.get('db_password",{"_index":751,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.config.get('db_port",{"_index":746,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.config.get('db_synchronize",{"_index":755,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.config.get('db_username",{"_index":750,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.getperioddays(createtrackingtimedto.start_date",{"_index":674,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.gettotalindays(createtrackingtimedto.nbdays",{"_index":677,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.hashpassword(updatepassworddto.password",{"_index":1000,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hashpassword(updateuserdto.password",{"_index":985,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.sign(payload",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug",{"_index":549,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.logger.debug('successfuly",{"_index":540,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.logger.error('failed",{"_index":545,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.password",{"_index":826,"title":{},"body":{"entities/User.html":{}}}],["this.reflector.get('roles",{"_index":517,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.trackingtimerepository.createquerybuilder",{"_index":713,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.trackingtimerepository.createquerybuilder('trackingtime",{"_index":704,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.trackingtimerepository.delete",{"_index":722,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.trackingtimerepository.findoneby",{"_index":710,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.trackingtimerepository.update",{"_index":723,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.trackingtimeservice.create(req.user[\"sub",{"_index":624,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["this.trackingtimeservice.findall",{"_index":626,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["this.trackingtimeservice.findone(+id",{"_index":627,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["this.trackingtimeservice.remove(+id",{"_index":636,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["this.trackingtimeservice.remove(id_tt",{"_index":981,"title":{},"body":{"injectables/UserService.html":{}}}],["this.trackingtimeservice.update(id,updatetrackingtimedto",{"_index":989,"title":{},"body":{"injectables/UserService.html":{}}}],["this.trackingtimeservice.updatestate(+id",{"_index":634,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["this.userrepository",{"_index":931,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["this.userrepository.create(createuserdto",{"_index":969,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.create(user",{"_index":943,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["this.userrepository.delete({id",{"_index":979,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":975,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby",{"_index":976,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby({email",{"_index":977,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":944,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["this.userrepository.save(newuser).catch((e",{"_index":970,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update({\"id\":user.id},updateuserdto).catch((e",{"_index":986,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update({\"id\":user.id},{\"password\":newpasswordhashed",{"_index":1001,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users",{"_index":538,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.userservice.create(createuserdto",{"_index":886,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":882,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":884,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id).then((user",{"_index":889,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id_user",{"_index":687,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["this.userservice.findone(params.id).then((user",{"_index":892,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findonebyemail(email",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyemail(user.email",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.remove(id",{"_index":908,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removeonetrackingtime(params.id_tt",{"_index":915,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setpassword(user",{"_index":901,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatetrackingtimebyid(id_tt",{"_index":905,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(user",{"_index":899,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":428,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["title:'hello",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["total",{"_index":681,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["totaldays",{"_index":676,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["touch",{"_index":1117,"title":{},"body":{"index.html":{}}}],["trackingtime",{"_index":216,"title":{"entities/Trackingtime.html":{}},"body":{"entities/Client.html":{},"controllers/ClientController.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateStateDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["trackingtime.client",{"_index":218,"title":{},"body":{"entities/Client.html":{}}}],["trackingtime.controller",{"_index":642,"title":{},"body":{"modules/TrackingtimeModule.html":{}}}],["trackingtime.dto",{"_index":618,"title":{},"body":{"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["trackingtime.dto.ts",{"_index":339,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"coverage.html":{}}}],["trackingtime.dto.ts:10",{"_index":784,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:11",{"_index":359,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:16",{"_index":779,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:17",{"_index":354,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:21",{"_index":780,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:23",{"_index":356,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:27",{"_index":782,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:29",{"_index":357,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:33",{"_index":783,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:35",{"_index":358,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:38",{"_index":777,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:40",{"_index":352,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:43",{"_index":774,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:45",{"_index":349,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:49",{"_index":776,"title":{},"body":{"classes/UpdateTrackingtimeDto.html":{}}}],["trackingtime.dto.ts:50",{"_index":351,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.nbdays",{"_index":373,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.nbhalfdays",{"_index":369,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.nbhours",{"_index":371,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["trackingtime.service",{"_index":617,"title":{},"body":{"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{}}}],["trackingtime.state",{"_index":711,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["trackingtime.status",{"_index":911,"title":{},"body":{"controllers/UserController.html":{}}}],["trackingtime.user",{"_index":811,"title":{},"body":{"entities/User.html":{}}}],["trackingtime/trackingtime.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["trackingtimecontroller",{"_index":600,"title":{"controllers/TrackingtimeController.html":{}},"body":{"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"coverage.html":{}}}],["trackingtimemodule",{"_index":37,"title":{"modules/TrackingtimeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingtimerepository",{"_index":652,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["trackingtimes",{"_index":203,"title":{},"body":{"entities/Client.html":{},"controllers/TrackingtimeController.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["trackingtimeservice",{"_index":616,"title":{"injectables/TrackingtimeService.html":{}},"body":{"controllers/TrackingtimeController.html":{},"modules/TrackingtimeModule.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["trackingtimestate",{"_index":577,"title":{},"body":{"entities/Trackingtime.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateStateDto.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["trackingtimestate.on_pending",{"_index":712,"title":{},"body":{"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{}}}],["transformer",{"_index":360,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"entities/User.html":{},"dependencies.html":{}}}],["true",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"entities/Client.html":{},"guards/RolesGuard.html":{},"entities/Trackingtime.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{}}}],["true,cascade:true",{"_index":233,"title":{},"body":{"entities/Client.html":{}}}],["true})@isoptional",{"_index":394,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["try",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["tt.id",{"_index":894,"title":{},"body":{"controllers/UserController.html":{}}}],["twitter",{"_index":1123,"title":{},"body":{"index.html":{}}}],["two",{"_index":725,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["type",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"entities/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClient.html":{},"interfaces/ITrackingtime.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"entities/Trackingtime.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type:'enum",{"_index":595,"title":{},"body":{"entities/Trackingtime.html":{}}}],["typeorm",{"_index":230,"title":{},"body":{"entities/Client.html":{},"injectables/ClientService.html":{},"entities/Trackingtime.html":{},"injectables/TrackingtimeService.html":{},"entities/User.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormconfigservice",{"_index":57,"title":{"injectables/TypeOrmConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["typeormmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([client",{"_index":310,"title":{},"body":{"modules/ClientModule.html":{}}}],["typeormmodule.forfeature([trackingtime",{"_index":646,"title":{},"body":{"modules/TrackingtimeModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"modules/LanguageSeederModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":739,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["typeormoptionsfactory",{"_index":742,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["types",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1080,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/TrackingtimeService.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception(\"no",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"the",{"_index":993,"title":{},"body":{"injectables/UserService.html":{}}}],["unauthorizedexception(\"you",{"_index":718,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["undefined",{"_index":370,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["unique",{"_index":816,"title":{},"body":{"entities/User.html":{}}}],["unique(['email",{"_index":820,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":1094,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/JwtStrategy.html":{},"injectables/Seeder.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1137,"title":{},"body":{"properties.html":{}}}],["update",{"_index":241,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":286,"title":{},"body":{"controllers/ClientController.html":{}}}],["update(id",{"_index":257,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/TrackingtimeService.html":{}}}],["update(updatetrackingtimedto",{"_index":714,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["updateclientdto",{"_index":258,"title":{"classes/UpdateClientDto.html":{}},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":204,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":229,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["updatepassworddto",{"_index":758,"title":{"classes/UpdatePasswordDTO.html":{}},"body":{"classes/UpdatePasswordDTO.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updatepassworddto.passwordconfirm",{"_index":992,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepassworduser",{"_index":863,"title":{},"body":{"controllers/UserController.html":{}}}],["updatestate",{"_index":602,"title":{},"body":{"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{}}}],["updatestate(@param('id",{"_index":632,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["updatestate(id",{"_index":611,"title":{},"body":{"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{}}}],["updatestatedto",{"_index":612,"title":{"classes/UpdateStateDto.html":{}},"body":{"controllers/TrackingtimeController.html":{},"injectables/TrackingtimeService.html":{},"classes/UpdateStateDto.html":{},"coverage.html":{}}}],["updatetrackingtime",{"_index":839,"title":{},"body":{"controllers/UserController.html":{}}}],["updatetrackingtime(@param('id_tt",{"_index":903,"title":{},"body":{"controllers/UserController.html":{}}}],["updatetrackingtime(id_tt",{"_index":867,"title":{},"body":{"controllers/UserController.html":{}}}],["updatetrackingtimebyid",{"_index":949,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetrackingtimebyid(id",{"_index":964,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetrackingtimebyid(id:number",{"_index":988,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetrackingtimedto",{"_index":666,"title":{"classes/UpdateTrackingtimeDto.html":{}},"body":{"injectables/TrackingtimeService.html":{},"classes/UpdateTrackingtimeDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuser",{"_index":840,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(@param('id",{"_index":897,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(id",{"_index":871,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(user",{"_index":966,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(user:user,updateuserdto:updateuserdto",{"_index":982,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":794,"title":{"classes/UpdateUserDTO.html":{}},"body":{"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.password",{"_index":984,"title":{},"body":{"injectables/UserService.html":{}}}],["useclass",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass:typeormconfigservice",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt'),rolesguard",{"_index":277,"title":{},"body":{"controllers/ClientController.html":{},"controllers/TrackingtimeController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('local",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":876,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":881,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":144,"title":{"entities/User.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ITrackingtime.html":{},"modules/LanguageSeederModule.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Trackingtime.html":{},"injectables/TrackingtimeService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserSeederService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user')@delete(':id",{"_index":609,"title":{},"body":{"controllers/TrackingtimeController.html":{}}}],["user's",{"_index":987,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":921,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":877,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":381,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":387,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["user.dto.ts:16",{"_index":388,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["user.dto.ts:23",{"_index":385,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["user.dto.ts:30",{"_index":390,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["user.dto.ts:35",{"_index":395,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{}}}],["user.email",{"_index":933,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["user.roles",{"_index":527,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.roles.some(role",{"_index":523,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.service",{"_index":487,"title":{},"body":{"modules/LanguageSeederModule.html":{},"modules/UserModule.html":{}}}],["user.trackingtimes",{"_index":582,"title":{},"body":{"entities/Trackingtime.html":{},"controllers/UserController.html":{}}}],["user.trackingtimes.find(tt",{"_index":893,"title":{},"body":{"controllers/UserController.html":{}}}],["user.validatepassword(password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.validatepassword(updatepassworddto.password",{"_index":996,"title":{},"body":{"injectables/UserService.html":{}}}],["user/entities/user.entity",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.controller",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/SeederModule.html":{}}}],["user/user.service",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/Seeder.html":{}}}],["user:user",{"_index":448,"title":{},"body":{"interfaces/ITrackingtime.html":{}}}],["user_id",{"_index":583,"title":{},"body":{"entities/Trackingtime.html":{}}}],["usercontroller",{"_index":142,"title":{"controllers/UserController.html":{}},"body":{"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentity",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity.email,sub:userentity.id,roles:userentity.roles",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodule",{"_index":38,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":749,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["usernamefield",{"_index":498,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrepository",{"_index":925,"title":{},"body":{"injectables/UserSeederService.html":{},"injectables/UserService.html":{}}}],["userrole",{"_index":391,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.user",{"_index":821,"title":{},"body":{"entities/User.html":{}}}],["users",{"_index":531,"title":{},"body":{"injectables/Seeder.html":{},"controllers/UserController.html":{},"injectables/UserSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.map(async",{"_index":930,"title":{},"body":{"injectables/UserSeederService.html":{}}}],["userseederservice",{"_index":485,"title":{"injectables/UserSeederService.html":{}},"body":{"modules/LanguageSeederModule.html":{},"injectables/Seeder.html":{},"injectables/UserSeederService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":146,"title":{"injectables/UserService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/TrackingtimeService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,private",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":592,"title":{},"body":{"entities/Trackingtime.html":{},"miscellaneous/enumerations.html":{}}}],["validate",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":494,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(email:string,password:string",{"_index":500,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":462,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":914,"title":{},"body":{"controllers/UserController.html":{}}}],["validateif",{"_index":365,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["validateif(trackingtime",{"_index":368,"title":{},"body":{"classes/CreateTrackingtimeDto.html":{}}}],["validatepassword(password",{"_index":829,"title":{},"body":{"entities/User.html":{}}}],["validateuser",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(authlogindto",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":591,"title":{},"body":{"entities/Trackingtime.html":{},"miscellaneous/enumerations.html":{}}}],["validationoptions",{"_index":1064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":129,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateTrackingtimeDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdatePasswordDTO.html":{},"classes/UpdateStateDto.html":{},"classes/UpdateTrackingtimeDto.html":{},"classes/UpdateUserDTO.html":{},"dependencies.html":{}}}],["value",{"_index":1057,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":501,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["varchar",{"_index":212,"title":{},"body":{"entities/Client.html":{},"entities/Trackingtime.html":{},"entities/User.html":{}}}],["variable",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1138,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1135,"title":{},"body":{"properties.html":{}}}],["void",{"_index":412,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":1089,"title":{},"body":{"index.html":{}}}],["website",{"_index":1121,"title":{},"body":{"index.html":{}}}],["where('trackingtime.id",{"_index":708,"title":{},"body":{"injectables/TrackingtimeService.html":{}}}],["world",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":1065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":1110,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules/TrackingtimeModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Object\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): Object {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nTrackingtimeModule\n\nTrackingtimeModule\n\nAppModule -->\n\nTrackingtimeModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ClientModule\n                        \n                        \n                            TrackingtimeModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_FILTER } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { ClientModule } from './client/client.module';\nimport { HttpExceptionFilter } from './common/filter/http-exception.filter';\nimport { TypeOrmConfigService } from './config/database/typeormconfig.service';\nimport { TrackingtimeModule } from './trackingtime/trackingtime.module';\nimport { UserModule } from './user/user.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({isGlobal: true}),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass:TypeOrmConfigService\n    }),\n    AuthModule,\n    ClientModule,\n    TrackingtimeModule,\n    UserModule\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_FILTER,\n      useClass: HttpExceptionFilter\n    }\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): Object {\n    return {title:'Hello World!'};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(authLoginDto: AuthLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Authentification')@UseGuards(undefined)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authLoginDto\n                                    \n                                                AuthLoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards, Request, HttpException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AuthLoginDto } from 'src/auth/dto/auth-login.dto';\nimport { AuthService } from 'src/auth/auth.service';\nimport {ApiBearerAuth, ApiResponse, ApiTags} from \"@nestjs/swagger\";\n\n@ApiBearerAuth()\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) { }\n\n  @ApiTags(\"Authentification\")\n  @UseGuards(AuthGuard('local'))\n  @Post('login')\n  async login(@Body() authLoginDto: AuthLoginDto) {\n    try {\n      return await this.authService.login(authLoginDto);\n    } catch (error) {\n      throw new HttpException(error.message, error.status)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLoginDto.html":{"url":"classes/AuthLoginDto.html","title":"class - AuthLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsCompanyEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-login.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-login.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { IsCompanyEmail } from 'src/common/validator/email.validator';\nimport {ApiProperty} from \"@nestjs/swagger\";\n\nexport class AuthLoginDto {\n  @ApiProperty()\n  @IsEmail()\n  @IsCompanyEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module,forwardRef } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UserController } from '../user/user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../user/entities/user.entity';\nimport { UserService } from '../user/user.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { ConfigService } from '@nestjs/config';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        secret: config.get(\"JWT_SECRET\"),\n        signOptions: { expiresIn: '1h' },\n      }),\n    }),\n    TypeOrmModule.forFeature([User]),\n    UserModule\n  ],\n  controllers: [AuthController],\n  providers: [AuthService,LocalStrategy,JwtStrategy]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(authLoginDto: AuthLoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authLoginDto\n                                    \n                                                AuthLoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { AuthLoginDto } from 'src/auth/dto/auth-login.dto';\nimport { UserService } from '../user/user.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(private userService: UserService,private jwtService:JwtService) {}\n\n    async login(user: any) {\n      const userEntity = await this.userService.findOneByEmail(user.email);\n      const payload = {email: userEntity.email,sub:userEntity.id,roles:userEntity.roles};\n      return {\n        access_token: this.jwtService.sign(payload),\n      };\n    }\n\n    async validateUser(authLoginDto: AuthLoginDto): Promise {\n      const {email,password} = authLoginDto;\n      const user = await this.userService.findOneByEmail(email);\n      if(!user){\n        throw new UnauthorizedException(\"No account linked to this email.\")\n      }else if(await user.validatePassword(password)){\n        const { password, ...result } = user;\n        return result;\n      }\n      return null;\n    }\n\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Client.html":{"url":"entities/Client.html","title":"entity - Client","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/entities/client.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                trackingtimes\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/client/entities/client.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/client/entities/client.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/client/entities/client.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackingtimes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trackingtime[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, trackingtime => trackingtime.client, {eager: true, cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/client/entities/client.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/client/entities/client.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Trackingtime } from \"src/trackingtime/entities/trackingtime.entity\";\nimport { BaseEntity, Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\n\n@Entity()\n\nexport class Client extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id:number\n    \n    @Column({\n        type: \"varchar\",\n        nullable: false\n    })\n    name: string\n\n    @Column()\n    @CreateDateColumn()\n    createdAt: Date;\n  \n    @Column()\n    @UpdateDateColumn()\n    updatedAt: Date;\n\n    @OneToMany(() => Trackingtime, (trackingtime) => trackingtime.client, { eager: true,cascade:true })\n    trackingtimes: Trackingtime[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientController.html":{"url":"controllers/ClientController.html","title":"controller - ClientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/client.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                client\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getOneTrackingtime\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createClientDto: CreateClientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Post()\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createClientDto\n                                    \n                                                CreateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneTrackingtime\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTrackingtime(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Get(':id/trackingtimes')\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateClientDto: UpdateClientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateClientDto\n                                    \n                                                UpdateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, HttpException, HttpStatus } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Roles } from 'src/common/decorators/roles.decorator';\nimport { RolesGuard } from 'src/auth/guard/roles.guard';\nimport { ClientService } from './client.service';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport {ApiTags,ApiBearerAuth} from '@nestjs/swagger';\n\n@ApiTags(\"Client\")\n@ApiBearerAuth()\n@Controller('client')\n@UseGuards(AuthGuard('jwt'),RolesGuard)\nexport class ClientController {\n  constructor(private readonly clientService: ClientService) { }\n\n  @Roles(\"admin\")\n  @Post()\n  async create(@Body() createClientDto: CreateClientDto) {\n    try {\n      return await this.clientService.create(createClientDto);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  @Roles(\"admin\")\n  @Get()\n  async findAll() {\n    try {\n      return await this.clientService.findAll();\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  @Roles(\"admin\")\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    try {\n      return await this.clientService.findOne(+id);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  @Roles(\"admin\")\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateClientDto: UpdateClientDto) {\n    if (Object.keys(updateClientDto).length === 0) throw new HttpException(\"There is no fields to update.\", HttpStatus.BAD_REQUEST)\n    try {\n      return this.clientService.update(+id, updateClientDto);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  @Roles(\"admin\")\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    try {\n      return this.clientService.remove(+id);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  @Roles(\"admin\")\n  @Get(':id/trackingtimes')\n  async getOneTrackingtime(@Param(\"id\") id: number) {\n      let trackingtime = [];\n      try {\n          await this.clientService.findOne(id).then((client) => {\n              if (!client) throw new HttpException(\"User not found.\", HttpStatus.UNAUTHORIZED);\n              trackingtime = client.trackingtimes;\n          });\n      } catch (error) {\n          throw new HttpException(error.message, error.status)\n      }\n      return trackingtime;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientModule.html":{"url":"modules/ClientModule.html","title":"module - ClientModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_exports\n\n\n\ncluster_ClientModule_providers\n\n\n\n\nClientService \n\nClientService \n\n\n\nClientModule\n\nClientModule\n\nClientService  -->\n\nClientModule->ClientService \n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/client.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClientService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientService } from './client.service';\nimport { ClientController } from './client.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Client } from './entities/client.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Client])\n  ],\n  exports: [ClientService],\n  controllers: [ClientController],\n  providers: [ClientService]\n})\nexport class ClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/client/client.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createClientDto: CreateClientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createClientDto\n                                    \n                                                CreateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateClientDto: UpdateClientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateClientDto\n                                    \n                                                UpdateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport { Client } from './entities/client.entity';\n\n@Injectable()\nexport class ClientService {\n  constructor(\n    @InjectRepository(Client) private readonly clientRepository: Repository,\n  ) {}\n  create(createClientDto: CreateClientDto):Promise {\n    const newClient = this.clientRepository.create(createClientDto);\n    return this.clientRepository.save(newClient);\n  }\n\n  findAll():Promise {\n    return this.clientRepository.find();\n  }\n\n  findOne(id: number):Promise {\n    return this.clientRepository.findOneBy({id});\n  }\n\n  update(id: number, updateClientDto: UpdateClientDto) {\n    return this.clientRepository.update({id},updateClientDto);\n  }\n\n  remove(id: number) {\n    return this.clientRepository.delete({id});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClientDto.html":{"url":"classes/CreateClientDto.html","title":"class - CreateClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/dto/create-client.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/client/dto/create-client.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\nimport {ApiProperty} from \"@nestjs/swagger\";\n\n\nexport class CreateClientDto {\n    @ApiProperty()\n    @IsNotEmpty()\n    readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackingtimeDto.html":{"url":"classes/CreateTrackingtimeDto.html","title":"class - CreateTrackingtimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackingtimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trackingtime/dto/create-trackingtime.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientComment\n                            \n                            \n                                clientId\n                            \n                            \n                                companyComment\n                            \n                            \n                                end_date\n                            \n                            \n                                nbDays\n                            \n                            \n                                nbHalfDays\n                            \n                            \n                                nbHours\n                            \n                            \n                                start_date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clientComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/create-trackingtime.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/create-trackingtime.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/create-trackingtime.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDate()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/create-trackingtime.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nbDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@ValidateIf(trackingtime => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/create-trackingtime.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nbHalfDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@ValidateIf(trackingtime => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/create-trackingtime.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nbHours\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@ValidateIf(trackingtime => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/create-trackingtime.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDate()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/create-trackingtime.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsDate, IsNotEmpty, IsNumber, IsOptional, IsString, ValidateIf } from \"class-validator\";\nimport {ApiProperty} from \"@nestjs/swagger\";\n\nexport class CreateTrackingtimeDto {\n\n    @ApiProperty()\n    @IsDate()\n    @IsNotEmpty()\n    @Type(() => Date)\n    start_date:Date;\n\n    @ApiProperty()\n    @IsDate()\n    @IsNotEmpty()\n    @Type(() => Date)\n    end_date:Date;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @ValidateIf(trackingtime => trackingtime.nbHalfDays == undefined && trackingtime.nbHours == undefined)\n    nbDays:string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @ValidateIf(trackingtime => trackingtime.nbDays == undefined && trackingtime.nbHours == undefined)\n    nbHalfDays:string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @ValidateIf(trackingtime => trackingtime.nbHalfDays == undefined && trackingtime.nbDays == undefined)\n    nbHours:string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    companyComment:string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    clientComment:string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsNumber()\n    clientId:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsCompanyEmail()@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsPasswordValid()@IsNotEmpty()@IsString()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEnum(UserRole, {each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString, MinLength } from \"class-validator\";\nimport { IsCompanyEmail } from \"src/common/validator/email.validator\";\nimport { IsPasswordValid } from \"src/common/validator/password.validator\";\nimport { UserRole } from \"../entities/user.entity\";\nimport {ApiProperty} from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  firstname: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  lastname: string;\n\n  @ApiProperty()\n  @IsCompanyEmail()\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsPasswordValid()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  password: string;\n\n  @ApiProperty()\n  @IsEnum(UserRole,{each:true})\n  @IsOptional()\n  roles: UserRole[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filter/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filter/http-exception.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport * as moment from 'moment';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus()?exception.getStatus():HttpStatus.INTERNAL_SERVER_ERROR;\n    const exResp = exception.getResponse();\n    response\n      .status(status)\n      .json({\n        code: status,\n        timestamp: moment().format('yyyy-MM-DD hh:mm:ss'),\n        path: request.url,\n        method: request.method,\n        message: exResp[\"message\"]?exResp[\"message\"]:exception.message\n      });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClient.html":{"url":"interfaces/IClient.html","title":"interface - IClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/client.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IClient{\n    name:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITrackingtime.html":{"url":"interfaces/ITrackingtime.html","title":"interface - ITrackingtime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITrackingtime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/trackingtime.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            client\n                                        \n                                \n                                \n                                        \n                                            clientComment\n                                        \n                                \n                                \n                                        \n                                            companyComment\n                                        \n                                \n                                \n                                        \n                                            end_date\n                                        \n                                \n                                \n                                        \n                                            nbDays\n                                        \n                                \n                                \n                                        \n                                            nbHalfDays\n                                        \n                                \n                                \n                                        \n                                            nbHours\n                                        \n                                \n                                \n                                        \n                                            start_date\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        client\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        client:         Client\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Client\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        companyComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        companyComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end_date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nbDays\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nbDays:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nbHalfDays\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nbHalfDays:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nbHours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nbHours:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start_date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"src/user/entities/user.entity\";\nimport { Client } from \"src/client/entities/client.entity\";\n\nexport interface ITrackingtime {\n    start_date:Date;\n    end_date:Date;\n    nbDays:string;\n    nbHalfDays:string;\n    nbHours:string;\n    companyComment:string;\n    clientComment:string;\n    user:User;\n    client:Client;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n    firstname: string;\n    lastname: string;\n    email: string;\n    password:string;\n    roles:string[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt,Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(\"JWT_SECRET\"),\n    });\n  }\n\n  async validate(payload: { email: string,sub:number,roles:string }) {\n    return {\n      email: payload.email,\n      sub: payload.sub,\n      roles: payload.roles\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LanguageSeederModule.html":{"url":"modules/LanguageSeederModule.html","title":"module - LanguageSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    LanguageSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LanguageSeederModule\n\n\n\ncluster_LanguageSeederModule_exports\n\n\n\ncluster_LanguageSeederModule_providers\n\n\n\n\nUserSeederService \n\nUserSeederService \n\n\n\nLanguageSeederModule\n\nLanguageSeederModule\n\nUserSeederService  -->\n\nLanguageSeederModule->UserSeederService \n\n\n\n\n\nUserSeederService\n\nUserSeederService\n\nLanguageSeederModule -->\n\nUserSeederService->LanguageSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { User } from \"src/user/entities/user.entity\";\nimport { UserSeederService } from \"./user.service\";\n\n@Module({\n    imports: [TypeOrmModule.forFeature([User])],\n    providers: [UserSeederService],\n    exports: [UserSeederService],\n  })\n  export class LanguageSeederModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { AuthLoginDto } from 'src/auth/dto/auth-login.dto';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n    });\n  }\n\n  async validate(email:string,password:string): Promise {\n    var payload = {email,password};\n    const user = await this.authService.validateUser(payload);\n    return user;\n  } \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guard/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/roles.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guard/roles.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector){}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const req = context.switchToHttp().getRequest();\n    const user = req.user;\n    const hasRole = () =>\n        user.roles.some(role => !!roles.find(item => item === role));\n    return user && user.roles && hasRole();\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Seeder.html":{"url":"injectables/Seeder.html","title":"injectable - Seeder","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Seeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/seeder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, languageSeederService: UserSeederService)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/seeder.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageSeederService\n                                                  \n                                                        \n                                                                        UserSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                    \n                    seed()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { UserSeederService } from \"./user/user.service\";\n\n@Injectable()\nexport class Seeder {\n  constructor(\n    private readonly logger: Logger,\n    private readonly languageSeederService: UserSeederService,\n  ) {}\n  async seed() {\n    await this.users()\n      .then(completed => {\n        this.logger.debug('Successfuly completed seeding users...');\n        Promise.resolve(completed);\n      })\n      .catch(error => {\n        this.logger.error('Failed seeding users...');\n        Promise.reject(error);\n      });\n  }\n  async users() {\n    return await Promise.all(this.languageSeederService.create())\n      .then(createdLanguages => {\n        this.logger.debug(\n          'No. of users created : ' +\n            createdLanguages.filter(\n              nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n            ).length,\n        );\n        return Promise.resolve(true);\n      })\n      .catch(error => Promise.reject(error));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_SeederModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nAppModule->SeederModule\n\n\n\n\n\nLanguageSeederModule\n\nLanguageSeederModule\n\nSeederModule -->\n\nLanguageSeederModule->SeederModule\n\n\n\n\n\nSeeder\n\nSeeder\n\nSeederModule -->\n\nSeeder->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Seeder\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                        \n                            LanguageSeederModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Logger } from \"@nestjs/common\";\nimport { AppModule } from \"src/app.module\";\nimport { Seeder } from \"./seeder\";\nimport { LanguageSeederModule } from \"./user/user.module\";\n\n@Module({\n    imports: [AppModule, LanguageSeederModule],\n    providers: [Logger, Seeder],\n  })\n  export class SeederModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Trackingtime.html":{"url":"entities/Trackingtime.html","title":"entity - Trackingtime","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Trackingtime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trackingtime/entities/trackingtime.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                clientComment\n                            \n                            \n                                companyComment\n                            \n                            \n                                createdAt\n                            \n                            \n                                end_date\n                            \n                            \n                                id\n                            \n                            \n                                nbDays\n                            \n                            \n                                nbHalfDays\n                            \n                            \n                                nbHours\n                            \n                            \n                                start_date\n                            \n                            \n                                state\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Client\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(type => Client, client => client.trackingtimes, {onDelete: 'CASCADE'})@JoinColumn({name: 'client_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nbDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nbHalfDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nbHours\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TrackingtimeState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TrackingtimeState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(type => User, user => user.trackingtimes, {onDelete: 'CASCADE'})@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/entities/trackingtime.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { User } from \"src/user/entities/user.entity\";\nimport { Client } from \"src/client/entities/client.entity\";\nimport { BaseEntity, Column, CreateDateColumn, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\n\nexport enum TrackingtimeState {\n    ON_PENDING = \"En attente de validation\",\n    VALID = \"Validé\",\n    REJECT = \"Refusé\"\n}\n\n@Entity()\n\nexport class Trackingtime extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id:number\n\n    @Column({\n        type: \"date\",\n        nullable: false\n    })\n    start_date:Date\n    \n    @Column({\n        type: \"date\",\n        nullable: false\n    })\n    end_date:Date\n\n    @Column({\n        type: \"varchar\",\n        nullable: true\n    })\n    nbDays:string\n\n    @Column({\n        type: \"varchar\",\n        nullable: true\n    })\n    nbHalfDays:string\n\n    @Column({\n        type: \"varchar\",\n        nullable: true\n    })\n    nbHours:string\n\n    @Column({\n        type: \"varchar\",\n        nullable: true\n    })\n    companyComment:string\n\n    @Column({\n        type: \"varchar\",\n        nullable: true\n    })\n    clientComment:string\n\n    @Column({\n        type:'enum',\n        enum: TrackingtimeState,\n        default:TrackingtimeState.ON_PENDING\n    })\n    state:TrackingtimeState\n\n    @Column()\n    @CreateDateColumn()\n    createdAt: Date;\n  \n    @Column()\n    @UpdateDateColumn()\n    updatedAt: Date;\n\n    @ManyToOne(type => User, (user) => user.trackingtimes, {\n        onDelete: 'CASCADE',\n    })\n    @JoinColumn({name:\"user_id\"})\n    user: User\n\n    @ManyToOne(type => Client, (client) => client.trackingtimes, {\n        onDelete: 'CASCADE',\n    })\n    @JoinColumn({name:\"client_id\"})\n    client: Client\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TrackingtimeController.html":{"url":"controllers/TrackingtimeController.html","title":"controller - TrackingtimeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TrackingtimeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trackingtime/trackingtime.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                trackingtimes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                updateState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, createTrackingtimeDto: CreateTrackingtimeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('user')@Post()\n                \n            \n\n            \n                \n                    Defined in src/trackingtime/trackingtime.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createTrackingtimeDto\n                                    \n                                                CreateTrackingtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/trackingtime/trackingtime.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/trackingtime/trackingtime.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin', 'user')@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/trackingtime/trackingtime.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateState\n                        \n                    \n                \n            \n            \n                \nupdateState(id: string, updateState: UpdateStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('admin')@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/trackingtime/trackingtime.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateState\n                                    \n                                                UpdateStateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, UseGuards, Put, Req, HttpStatus, HttpException, Catch } from '@nestjs/common';\nimport { TrackingtimeService } from './trackingtime.service';\nimport { CreateTrackingtimeDto } from './dto/create-trackingtime.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UpdateStateDto } from './dto/update-trackingtime-state.dto';\nimport { Request } from 'express';\nimport * as moment from \"moment\";\nimport { RolesGuard } from 'src/auth/guard/roles.guard';\nimport { Roles } from 'src/common/decorators/roles.decorator';\nimport {ApiTags,ApiBearerAuth} from '@nestjs/swagger';\n\n@ApiTags(\"Trackingtimes\")\n@ApiBearerAuth()\n@Controller('trackingtimes')\n@UseGuards(AuthGuard('jwt'),RolesGuard)\nexport class TrackingtimeController {\n  constructor(private readonly trackingtimeService: TrackingtimeService) { }\n\n  @Roles(\"user\")\n  @Post()\n  async create(@Req() req: Request, @Body() createTrackingtimeDto: CreateTrackingtimeDto) {\n    try {\n      return await this.trackingtimeService.create(req.user[\"sub\"], createTrackingtimeDto);\n    } catch (error) {\n      throw new HttpException(error.message, error.code)\n    }\n  }\n\n  @Roles(\"admin\")\n  @Get()\n  async findAll() {\n    try {\n      return await this.trackingtimeService.findAll();\n    } catch (error) {\n      throw new HttpException(error.message, error.code)\n    }\n  }\n\n  @Roles(\"admin\")\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    try {\n      const trackingtime = await this.trackingtimeService.findOne(+id);\n      if(!trackingtime)throw new HttpException(\"Trackingtime not found\", HttpStatus.NOT_FOUND);\n      return trackingtime;\n    } catch (error) {\n      throw new HttpException(error.message, error.code)\n    }\n  }\n\n  @Roles(\"admin\")\n  @Put(':id')\n  updateState(@Param('id') id: string, @Body() updateState: UpdateStateDto) {\n    if (Object.keys(updateState).length === 0) throw new HttpException(\"There is no fields to update.\", HttpStatus.BAD_REQUEST)\n    try {\n      return this.trackingtimeService.updateState(+id, updateState);\n    } catch (error) {\n      throw new HttpException(error.message, error.code)\n    }\n  }\n\n  @Roles(\"admin\",\"user\")\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    try {\n      return await this.trackingtimeService.remove(+id);\n    } catch (error) {\n      throw new HttpException(error.message, error.code)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingtimeModule.html":{"url":"modules/TrackingtimeModule.html","title":"module - TrackingtimeModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingtimeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TrackingtimeModule\n\n\n\ncluster_TrackingtimeModule_imports\n\n\n\ncluster_TrackingtimeModule_exports\n\n\n\ncluster_TrackingtimeModule_providers\n\n\n\n\nClientModule\n\nClientModule\n\n\n\nTrackingtimeModule\n\nTrackingtimeModule\n\nTrackingtimeModule -->\n\nClientModule->TrackingtimeModule\n\n\n\n\n\nTrackingtimeService \n\nTrackingtimeService \n\nTrackingtimeService  -->\n\nTrackingtimeModule->TrackingtimeService \n\n\n\n\n\nTrackingtimeService\n\nTrackingtimeService\n\nTrackingtimeModule -->\n\nTrackingtimeService->TrackingtimeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/trackingtime/trackingtime.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TrackingtimeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TrackingtimeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClientModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingtimeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module,forwardRef } from '@nestjs/common';\nimport { TrackingtimeService } from './trackingtime.service';\nimport { TrackingtimeController } from './trackingtime.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Trackingtime } from './entities/trackingtime.entity';\nimport { ClientModule } from 'src/client/client.module';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [\n    forwardRef(() => UserModule),\n    TypeOrmModule.forFeature([Trackingtime]),\n    ClientModule\n  ],\n  controllers: [TrackingtimeController],\n  providers: [TrackingtimeService],\n  exports: [TrackingtimeService]\n})\nexport class TrackingtimeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrackingtimeService.html":{"url":"injectables/TrackingtimeService.html","title":"injectable - TrackingtimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TrackingtimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trackingtime/trackingtime.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                getPeriodDays\n                            \n                            \n                                getTotalInDays\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                updateState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trackingtimeRepository: Repository, clientService: ClientService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/trackingtime/trackingtime.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackingtimeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(id_user: number, createTrackingtimeDto: CreateTrackingtimeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/trackingtime/trackingtime.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_user\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createTrackingtimeDto\n                                    \n                                                CreateTrackingtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/trackingtime/trackingtime.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/trackingtime/trackingtime.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriodDays\n                        \n                    \n                \n            \n            \n                \ngetPeriodDays(start_date: Date, end_date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/trackingtime/trackingtime.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start_date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end_date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalInDays\n                        \n                    \n                \n            \n            \n                \ngetTotalInDays(days: string, halfDays: string, hours: string)\n                \n            \n\n\n            \n                \n                    Defined in src/trackingtime/trackingtime.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    halfDays\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hours\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/trackingtime/trackingtime.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateTrackingtimeDto: UpdateTrackingtimeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/trackingtime/trackingtime.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTrackingtimeDto\n                                    \n                                                UpdateTrackingtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateState\n                        \n                    \n                \n            \n            \n                \nupdateState(id: number, updateState: UpdateStateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/trackingtime/trackingtime.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateState\n                                    \n                                                UpdateStateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, HttpException, HttpStatus, Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as moment from 'moment';\nimport { UserService } from 'src/user/user.service';\nimport { ClientService } from 'src/client/client.service';\nimport { Repository } from 'typeorm';\nimport { CreateTrackingtimeDto } from './dto/create-trackingtime.dto';\nimport { UpdateStateDto } from './dto/update-trackingtime-state.dto';\nimport { UpdateTrackingtimeDto } from './dto/update-trackingtime.dto';\nimport { Trackingtime, TrackingtimeState } from './entities/trackingtime.entity';\n\n@Injectable()\nexport class TrackingtimeService {\n  constructor(\n    @InjectRepository(Trackingtime) private trackingtimeRepository: Repository,\n    private clientService: ClientService,\n    @Inject(forwardRef(() => UserService))\n    private userService: UserService,\n  ) { }\n\n  async create(id_user: number, createTrackingtimeDto: CreateTrackingtimeDto) {\n    const nbDaysByPeriod = this.getPeriodDays(createTrackingtimeDto.start_date, createTrackingtimeDto.end_date);\n    const totalDays = this.getTotalInDays(createTrackingtimeDto.nbDays, createTrackingtimeDto.nbHalfDays, createTrackingtimeDto.nbHours);\n    if ((createTrackingtimeDto.end_date  nbDaysByPeriod) {\n      throw new HttpException(\"The total of day is greater than the total of period days.\", 400);\n    }\n\n    let client = await this.clientService.findOne(createTrackingtimeDto.clientId);\n    let user = await this.userService.findOne(id_user);\n\n    if (!user) {\n      throw new HttpException(\"The user is not found.\", 404)\n    }\n    if (!client) {\n      throw new HttpException(\"The client is not found.\", 404)\n    }\n\n    const newTrackingtime = new Trackingtime();\n    newTrackingtime.start_date = createTrackingtimeDto.start_date;\n    newTrackingtime.end_date = createTrackingtimeDto.end_date;\n    newTrackingtime.nbDays = createTrackingtimeDto.nbDays;\n    newTrackingtime.nbHalfDays = createTrackingtimeDto.nbHalfDays;\n    newTrackingtime.nbHours = createTrackingtimeDto.nbHours;\n    newTrackingtime.companyComment = createTrackingtimeDto.companyComment;\n    newTrackingtime.clientComment = createTrackingtimeDto.clientComment;\n\n    newTrackingtime.client = client;\n    newTrackingtime.user = user;\n\n    return await newTrackingtime.save();\n  }\n\n  async findAll() {\n    return await this.trackingtimeRepository.createQueryBuilder('trackingtime')\n      .leftJoinAndSelect(\"trackingtime.user\", \"user\")\n      .leftJoinAndSelect(\"trackingtime.client\", \"client\")\n      .getMany()\n  }\n\n  async findOne(id: number) {\n    return await this.trackingtimeRepository.createQueryBuilder('trackingtime')\n      .leftJoinAndSelect(\"trackingtime.user\", \"user\")\n      .leftJoinAndSelect(\"trackingtime.client\", \"client\")\n      .where('trackingtime.id = :id', { id: id })\n      .getOne()\n  }\n\n\n  //for user\n  async update(id: number, updateTrackingtimeDto: UpdateTrackingtimeDto): Promise {\n    const trackingtime = await this.trackingtimeRepository.findOneBy({ id });\n    if (trackingtime && trackingtime.state == TrackingtimeState.ON_PENDING) {\n      const result = await this.trackingtimeRepository.createQueryBuilder()\n        .update(updateTrackingtimeDto)\n        .where({\n          id: id,\n        })\n        .returning('*')\n        .execute()\n      return result.raw[0];\n    }\n    return new UnauthorizedException(\"You can't change if it is not on pending.\")\n  }\n\n  async remove(id: number) {\n    const trackingtime = await this.trackingtimeRepository.findOneBy({ id });\n    if (!trackingtime) throw new HttpException(\"Trackingtime not found\", HttpStatus.NOT_FOUND);\n    return this.trackingtimeRepository.delete({ id });\n  }\n\n  updateState(id: number, updateState: UpdateStateDto) {\n    return this.trackingtimeRepository.update({ id }, updateState)\n  }\n\n  //get the total number of date between two date (including start_date)\n  getPeriodDays(start_date: Date, end_date: Date): Number {\n    return moment(end_date).diff(moment(start_date), 'days') + 1;\n  }\n\n  //get the total days by giving days and hours\n  getTotalInDays(days: string, halfDays: string, hours: string): Number {\n    return parseInt(days) + (parseInt(halfDays) * 0.5) + (parseInt(hours) / 24)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeOrmConfigService.html":{"url":"injectables/TypeOrmConfigService.html","title":"injectable - TypeOrmConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypeOrmConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/database/typeormconfig.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/database/typeormconfig.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(ConfigService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database/typeormconfig.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmOptionsFactory, TypeOrmModuleOptions } from '@nestjs/typeorm';\n\n@Injectable()\nexport class TypeOrmConfigService implements TypeOrmOptionsFactory {\n  @Inject(ConfigService)\n  private readonly config: ConfigService;\n\n  public createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: 'postgres',\n      host: this.config.get('DB_HOST'),\n      port: this.config.get('DB_PORT'),\n      database: this.config.get('DB_NAME'),\n      username: this.config.get('DB_USERNAME'),\n      password: this.config.get('DB_PASSWORD'),\n      entities: ['dist/**/*.entity.{ts,js}'],\n      autoLoadEntities:true,\n      synchronize: this.config.get('DB_SYNCHRONIZE'),\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClientDto.html":{"url":"classes/UpdateClientDto.html","title":"class - UpdateClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/dto/update-client.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/client/dto/update-client.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\nimport {ApiProperty} from \"@nestjs/swagger\";\n\nexport class UpdateClientDto {\n    @ApiProperty()\n    @IsNotEmpty()\n    readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDTO.html":{"url":"classes/UpdatePasswordDTO.html","title":"class - UpdatePasswordDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsPasswordValid()@IsNotEmpty()@IsString()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-password.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsPasswordValid()@IsNotEmpty()@IsString()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-password.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\nimport { IsPasswordValid } from \"src/common/validator/password.validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UpdatePasswordDTO {\n    @ApiProperty()\n    @IsPasswordValid()\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(8)\n    password:string\n\n    @ApiProperty()\n    @IsPasswordValid()\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(8)\n    passwordConfirm:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStateDto.html":{"url":"classes/UpdateStateDto.html","title":"class - UpdateStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trackingtime/dto/update-trackingtime-state.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TrackingtimeState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEnum(TrackingtimeState)@NotEquals(TrackingtimeState.ON_PENDING)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime-state.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, NotEquals } from \"class-validator\";\nimport { TrackingtimeState } from \"../entities/trackingtime.entity\";\nimport {ApiProperty} from \"@nestjs/swagger\";\n\nexport class UpdateStateDto {\n    @ApiProperty()\n    @IsEnum(TrackingtimeState)\n    @NotEquals(TrackingtimeState.ON_PENDING)\n    @IsNotEmpty()\n    state:TrackingtimeState;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTrackingtimeDto.html":{"url":"classes/UpdateTrackingtimeDto.html","title":"class - UpdateTrackingtimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTrackingtimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trackingtime/dto/update-trackingtime.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                clientComment\n                            \n                            \n                                    Optional\n                                clientId\n                            \n                            \n                                    Optional\n                                companyComment\n                            \n                            \n                                    Optional\n                                end_date\n                            \n                            \n                                    Optional\n                                nbDays\n                            \n                            \n                                    Optional\n                                nbHalfDays\n                            \n                            \n                                    Optional\n                                nbHours\n                            \n                            \n                                    Optional\n                                start_date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        clientComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsNotEmpty()@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        end_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsDate()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nbDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nbHalfDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nbHours\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        start_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsDate()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trackingtime/dto/update-trackingtime.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsDate, IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\nimport {ApiProperty} from \"@nestjs/swagger\";\n\nexport class UpdateTrackingtimeDto{\n    @ApiProperty({required:false})\n    @IsDate()\n    @IsOptional()\n    @Type(() => Date)\n    start_date?:Date;\n\n    @ApiProperty({required:false})\n    @IsDate()\n    @IsOptional()\n    @Type(() => Date)\n    end_date?:Date;\n\n    @ApiProperty({required:false})\n    @IsString()\n    @IsOptional()\n    nbDays?:string;\n\n    @ApiProperty({required:false})\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    nbHalfDays?:string;\n\n    @ApiProperty({required:false})\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    nbHours?:string;\n\n    @ApiProperty({required:false})\n    @IsString()\n    @IsOptional()\n    companyComment?:string;\n\n    @ApiProperty({required:false})\n    @IsString()\n    @IsOptional()\n    clientComment?:string;\n\n    @ApiProperty({required:false})\n    @IsNotEmpty()\n    @IsNumber()\n    @IsOptional()\n    clientId?:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDTO.html":{"url":"classes/UpdateUserDTO.html","title":"class - UpdateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsCompanyEmail()@IsOptional()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsPasswordValid()@IsOptional()@IsString()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsEnum(UserRole, {each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString, MinLength } from \"class-validator\";\nimport { IsCompanyEmail } from \"src/common/validator/email.validator\";\nimport { IsPasswordValid } from \"src/common/validator/password.validator\";\nimport { UserRole } from \"../entities/user.entity\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UpdateUserDTO {\n    @ApiProperty({required:false})\n    @IsOptional()\n    @IsString()\n    firstname: string;\n\n    @ApiProperty({required:false})\n    @IsOptional()\n    @IsString()\n    lastname: string;\n\n    @ApiProperty({required:false})\n    @IsCompanyEmail()\n    @IsOptional()\n    @IsString()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty({required:false})\n    @IsPasswordValid()\n    @IsOptional()\n    @IsString()\n    @MinLength(8)\n    password: string;\n\n    @ApiProperty({required:false})\n    @IsEnum(UserRole, { each: true })\n    @IsOptional()\n    roles: UserRole[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                id\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                trackingtimes\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', default: undefined, array: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackingtimes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trackingtime[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(type => Trackingtime, trackingtime => trackingtime.user, {eager: true, cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, BeforeInsert, BeforeUpdate, Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn, Unique, UpdateDateColumn } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\";\nimport { Trackingtime } from \"src/trackingtime/entities/trackingtime.entity\";\nimport { Exclude } from \"class-transformer\";\n\nexport enum UserRole {\n    ADMIN = 'admin',\n    USER = 'user'\n}\n\n@Entity()\n@Unique(['email'])\n\nexport class User extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column({\n        type: \"varchar\",\n        nullable: false\n    })\n    firstname: string\n\n    @Column({\n        type: \"varchar\",\n        nullable: false\n    })\n    lastname: string\n\n    @Column({\n        type: \"varchar\",\n        nullable: false\n    })\n    email: string\n\n    @Column({\n        type: \"varchar\",\n        nullable: false\n    })\n    @Exclude()\n    password: string\n\n    @Column({\n        type: 'varchar',\n        default: [UserRole.USER],\n        array: true\n    })\n    roles: string[];\n\n    @Column()\n    @CreateDateColumn()\n    createdAt: Date;\n\n    @Column()\n    @UpdateDateColumn()\n    updatedAt: Date;\n\n\n    @OneToMany(type => Trackingtime, trackingtime => trackingtime.user, { eager: true, cascade: true })\n    trackingtimes: Trackingtime[]\n\n    constructor(partial: Partial) {\n        super();\n        Object.assign(this, partial);\n    }\n\n    @BeforeInsert()\n    async hashPassword() {\n        this.password = await bcrypt.hash(this.password, 8);\n    }\n\n    async validatePassword(password: string): Promise {\n        return await bcrypt.compare(password, this.password);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUsers\n                            \n                            \n                                    Async\n                                deleteOneTrackingtime\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findUsersById\n                            \n                            \n                                    Async\n                                getOneTrackingtime\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                getUsersTrackingtimes\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                updateTrackingtime\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(ClassSerializerInterceptor)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneTrackingtime\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneTrackingtime(params: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/trackingtimes/id_tt')@Roles('admin', 'user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUsersById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUsersById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseInterceptors(ClassSerializerInterceptor)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneTrackingtime\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTrackingtime(params: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/trackingtimes/:id_tt')@Roles('admin', 'user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseInterceptors(ClassSerializerInterceptor)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersTrackingtimes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersTrackingtimes(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/trackingtimes')@Roles('admin', 'user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(id: number, updatePasswordUser: UpdatePasswordDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/reset-password')@Roles('admin', 'user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePasswordUser\n                                    \n                                                UpdatePasswordDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTrackingtime\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTrackingtime(id_tt: number, updateTrackingtimeDto: UpdateTrackingtimeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/trackingtimes/:id_tt')@Roles('admin', 'user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_tt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTrackingtimeDto\n                                    \n                                                UpdateTrackingtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: number, updateUser: UpdateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUser\n                                    \n                                                UpdateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Delete, Get, HttpException, HttpStatus, Param, ParseIntPipe, Patch, Post, Put, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { CreateUserDto } from 'src/user/dto/create-user.dto';\nimport { UpdatePasswordDTO } from 'src/user/dto/update-password.dto';\nimport { UpdateUserDTO } from 'src/user/dto/update-user.dto';\nimport { Roles } from 'src/common/decorators/roles.decorator';\nimport { UserService } from 'src/user/user.service';\nimport { UpdateTrackingtimeDto } from 'src/trackingtime/dto/update-trackingtime.dto';\nimport { TrackingtimeState } from 'src/trackingtime/entities/trackingtime.entity';\nimport { Request } from 'express';\nimport { RolesGuard } from 'src/auth/guard/roles.guard';\nimport {ApiTags,ApiBearerAuth} from \"@nestjs/swagger\";\n\n@ApiTags(\"User\")\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'),RolesGuard)\n@Controller('users')\nexport class UserController {\n    constructor(\n        private readonly userService: UserService\n    ) { }\n\n    @Get()\n    @UseInterceptors(ClassSerializerInterceptor)\n    @Roles('admin')\n    async getUsers() {\n        try {\n            return await this.userService.findAll();\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n    }\n\n    @Get(':id')\n    @UseInterceptors(ClassSerializerInterceptor)\n    @Roles('admin')\n    async findUsersById(@Param('id', ParseIntPipe) id: number) {\n        try {\n            const user = await this.userService.findOne(id);\n            if (!user) {\n                throw new HttpException(\"User not found.\", HttpStatus.NOT_FOUND)\n            } else {\n                return user;\n            }\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n    }\n\n    @Post()\n    @UseInterceptors(ClassSerializerInterceptor)\n    @Roles('admin')\n    async createUsers(@Body() createUserDto: CreateUserDto) {\n        try {\n            return await this.userService.create(createUserDto);\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n    }\n\n    @Get(':id/trackingtimes')\n    @Roles('admin','user')\n    async getUsersTrackingtimes(@Param('id', ParseIntPipe) id: number) {\n        let trackingtimes = [];\n        try {\n            await this.userService.findOne(id).then((user) => {\n                if (!user) throw new HttpException(\"User not found.\", HttpStatus.UNAUTHORIZED);\n                trackingtimes = user.trackingtimes;\n            });\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n\n        return trackingtimes;\n    }\n\n    @Get(':id/trackingtimes/:id_tt')\n    @Roles('admin','user')\n    async getOneTrackingtime(@Param() params: any) {\n        let trackingtime;\n        try {\n            await this.userService.findOne(params.id).then((user) => {\n                if (!user) throw new HttpException(\"User not found.\", HttpStatus.UNAUTHORIZED);\n                trackingtime = user.trackingtimes.find(tt => tt.id == params.id_tt);\n            });\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n        if (!trackingtime) throw new HttpException(`Trackingtime ${params.id_tt} not found`, HttpStatus.NOT_FOUND);\n        return trackingtime;\n    }\n\n    @Patch(':id')\n    @Roles('admin')\n    async updateUser(@Param('id', ParseIntPipe) id: number, @Body() updateUser: UpdateUserDTO) {\n        if (Object.keys(updateUser).length === 0) throw new HttpException(\"There is no fields to update.\", HttpStatus.BAD_REQUEST)\n        try {\n            const user = await this.userService.findOne(id);\n            if (!user) throw new HttpException(\"User not found.\", HttpStatus.UNAUTHORIZED);\n            return this.userService.updateUser(user, updateUser);\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n    }\n\n    @Put(':id/reset-password')\n    @Roles('admin','user')\n    async resetPassword(@Param('id', ParseIntPipe) id: number, @Body() updatePasswordUser: UpdatePasswordDTO) {\n        try {\n            const user = await this.userService.findOne(id);\n            if (!user) throw new HttpException(\"User not found.\", HttpStatus.UNAUTHORIZED);\n            return this.userService.setPassword(user, updatePasswordUser);\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n    }\n\n    @Patch(':id/trackingtimes/:id_tt')\n    @Roles('admin','user')\n    async updateTrackingtime(@Param('id_tt', ParseIntPipe) id_tt: number, @Body() updateTrackingtimeDto: UpdateTrackingtimeDto) {\n        if (Object.keys(updateTrackingtimeDto).length === 0) throw new HttpException(\"There is no fields to update.\", HttpStatus.BAD_REQUEST)\n        try {\n            return await this.userService.updateTrackingtimeById(id_tt, updateTrackingtimeDto);\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n    }\n\n    @Delete('/:id')\n    @Roles('admin')\n    async deleteUser(@Param('id', ParseIntPipe) id: number) {\n        try {\n            return await this.userService.remove(id);\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n    }\n\n    @Delete('/:id/trackingtimes/id_tt')\n    @Roles('admin','user')\n    async deleteOneTrackingtime(@Param() params: any) {\n        let trackingtime;\n        try {\n            await this.userService.findOne(params.id).then((user) => {\n                if (!user) throw new HttpException(\"User not found.\", HttpStatus.UNAUTHORIZED);\n                trackingtime = user.trackingtimes.find(tt => tt.id == params.id_tt);\n            });\n        } catch (error) {\n            throw new HttpException(error.message, error.status)\n        }\n        if (!trackingtime) throw new HttpException(`Trackingtime ${params.id_tt} not found`, HttpStatus.NOT_FOUND);\n        if (trackingtime.status !== TrackingtimeState.ON_PENDING) throw new HttpException(`Trackingtime ${params.id_tt} can't be deleted because it's validated.`, HttpStatus.NOT_FOUND);\n        return await this.userService.removeOneTrackingtime(params.id_tt);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module,forwardRef } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TrackingtimeModule } from 'src/trackingtime/trackingtime.module';\nimport { User } from './entities/user.entity';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n    imports: [\n        forwardRef(() => TrackingtimeModule),\n        TypeOrmModule.forFeature([User]),\n    ],\n    exports: [UserService],\n    controllers: [UserController],\n    providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserSeederService.html":{"url":"injectables/UserSeederService.html","title":"injectable - UserSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/user/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { User } from \"src/user/entities/user.entity\";\nimport { IUser } from \"src/interfaces/user.interface\";\nimport { Repository } from \"typeorm\";\nimport { users } from \"./data\";\n\n @Injectable()\n export class UserSeederService {\n   constructor(\n     @InjectRepository(User)\n     private readonly userRepository: Repository,\n   ) {}\n\n   create(): Array> {\n     return users.map(async (user: IUser) => {\n       return await this.userRepository\n         .findOneBy({ email: user.email })\n         .then(result => {\n           // We check if a language already exists.\n           // If it does don't create a new one.\n           if (result) {\n             return Promise.resolve(null);\n           }\n           const newUser = this.userRepository.create(user);\n           return this.userRepository.save(newUser)\n         })\n         .catch(error => Promise.reject(error));\n     });\n   }\n }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneByEmail\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                removeOneTrackingtime\n                            \n                            \n                                    Async\n                                setPassword\n                            \n                            \n                                    Async\n                                updateTrackingtimeById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, trackingtimeService: TrackingtimeService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackingtimeService\n                                                  \n                                                        \n                                                                        TrackingtimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \nfindOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeOneTrackingtime\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeOneTrackingtime(id_tt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_tt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassword(user: User, updatePasswordDTO: UpdatePasswordDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePasswordDTO\n                                    \n                                                UpdatePasswordDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTrackingtimeById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTrackingtimeById(id: number, updateTrackingtimeDto: UpdateTrackingtimeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTrackingtimeDto\n                                    \n                                                UpdateTrackingtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(user: User, updateUserDTO: UpdateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDTO\n                                    \n                                                UpdateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUserDto } from 'src/user/dto/create-user.dto';\nimport { UpdatePasswordDTO } from 'src/user/dto/update-password.dto';\nimport { UpdateUserDTO } from 'src/user/dto/update-user.dto';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateTrackingtimeDto } from 'src/trackingtime/dto/create-trackingtime.dto';\nimport { UpdateTrackingtimeDto } from 'src/trackingtime/dto/update-trackingtime.dto';\nimport { TrackingtimeService } from 'src/trackingtime/trackingtime.service';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User) private readonly userRepository: Repository,\n    @Inject(forwardRef(() => TrackingtimeService))\n    private readonly trackingtimeService: TrackingtimeService,\n  ) {}\n      \n  create(createUserDto: CreateUserDto): Promise {\n    const newUser = this.userRepository.create(createUserDto);\n    return this.userRepository.save(newUser).catch((e) => {\n      if (e.code === '23505') {\n        throw new UnauthorizedException(\n          'Account with this email already exist.',\n        ); \n      }\n      return e;\n    });\n  }\n      \n  findAll(): Promise {\n    return this.userRepository.find();\n  }\n\n  findOne(id: number): Promise {\n    return this.userRepository.findOneBy({ id });\n  }\n\n  findOneByEmail(email: string): Promise {\n    return this.userRepository.findOneBy({email});\n  }\n\n  remove(id:number){\n    return this.userRepository.delete({id});\n  }\n\n  async removeOneTrackingtime(id_tt:number){\n    return await this.trackingtimeService.remove(id_tt);\n  }\n\n  async updateUser(user:User,updateUserDTO:UpdateUserDTO){\n    if(updateUserDTO.password) {updateUserDTO.password = await this.hashPassword(updateUserDTO.password)};\n    return await this.userRepository.update({\"id\":user.id},updateUserDTO).catch((e) => {\n        if (e.code === '23505') {\n          throw new UnauthorizedException(\n            'Account with this email already exist.',\n          ); \n        }\n        return e;\n      });\n  }\n\n  //update user's trackingtime by id \n  async updateTrackingtimeById(id:number, updateTrackingtimeDto: UpdateTrackingtimeDto): Promise {\n    return await this.trackingtimeService.update(id,updateTrackingtimeDto);\n  }\n\n  async setPassword(user:User,updatePasswordDTO:UpdatePasswordDTO){\n    if(updatePasswordDTO.password !== updatePasswordDTO.passwordConfirm){\n      throw new UnauthorizedException(\"The new password and the confirm password are different.\")\n    }\n    if(await user.validatePassword(updatePasswordDTO.password)){\n      throw new UnauthorizedException(\"The current and the new password is the same.\")\n    }\n    const newPasswordHashed = await this.hashPassword(updatePasswordDTO.password);\n    return await this.userRepository.update({\"id\":user.id},{\"password\":newPasswordHashed});\n  }\n\n  async hashPassword(password:string){\n      return await bcrypt.hash(password,8);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-login.dto.ts\n            \n            class\n            AuthLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/client/client.controller.ts\n            \n            controller\n            ClientController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/client/client.service.ts\n            \n            injectable\n            ClientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/client/dto/create-client.dto.ts\n            \n            class\n            CreateClientDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/client/dto/update-client.dto.ts\n            \n            class\n            UpdateClientDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/client/entities/client.entity.ts\n            \n            entity\n            Client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filter/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validator/email.validator.ts\n            \n            function\n            IsCompanyEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/validator/password.validator.ts\n            \n            function\n            IsPasswordValid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database/typeormconfig.service.ts\n            \n            injectable\n            TypeOrmConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/seeder.ts\n            \n            injectable\n            Seeder\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/seeders/user/data.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/user/user.service.ts\n            \n            injectable\n            UserSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/client.interface.ts\n            \n            interface\n            IClient\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/trackingtime.interface.ts\n            \n            interface\n            ITrackingtime\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/interfaces/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seed.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/trackingtime/dto/create-trackingtime.dto.ts\n            \n            class\n            CreateTrackingtimeDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/trackingtime/dto/update-trackingtime-state.dto.ts\n            \n            class\n            UpdateStateDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/trackingtime/dto/update-trackingtime.dto.ts\n            \n            class\n            UpdateTrackingtimeDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/trackingtime/entities/trackingtime.entity.ts\n            \n            entity\n            Trackingtime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/trackingtime/trackingtime.controller.ts\n            \n            controller\n            TrackingtimeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/trackingtime/trackingtime.service.ts\n            \n            injectable\n            TrackingtimeService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-password.dto.ts\n            \n            class\n            UpdatePasswordDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @nestjs/typeorm : ^9.0.0\n        \n            bcrypt : 5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            moment : ^2.29.4\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.7\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TrackingtimeState   (src/.../trackingtime.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/trackingtime/entities/trackingtime.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TrackingtimeState\n                    \n                \n                        \n                            \n                                 ON_PENDING\n                            \n                        \n                        \n                            \n                                Value : En attente de validation\n                            \n                        \n                        \n                            \n                                 VALID\n                            \n                        \n                        \n                            \n                                Value : Validé\n                            \n                        \n                        \n                            \n                                 REJECT\n                            \n                        \n                        \n                            \n                                Value : Refusé\n                            \n                        \n            \n        \n\n    src/user/entities/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../seed.ts)\n                        \n                        \n                            IsCompanyEmail   (src/.../email.validator.ts)\n                        \n                        \n                            IsPasswordValid   (src/.../password.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/validator/email.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsCompanyEmail\n                        \n                    \n                \n            \n            \n                \nIsCompanyEmail(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/common/validator/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsPasswordValid\n                        \n                    \n                \n            \n            \n                \nIsPasswordValid(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LanguageSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingtimeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_exports\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_LanguageSeederModule\n\n\n\ncluster_LanguageSeederModule_exports\n\n\n\ncluster_LanguageSeederModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_TrackingtimeModule\n\n\n\ncluster_TrackingtimeModule_exports\n\n\n\ncluster_TrackingtimeModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\n\n\nTrackingtimeModule\n\nTrackingtimeModule\n\nTrackingtimeModule -->\n\nClientModule->TrackingtimeModule\n\n\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nClientService \n\nClientService \n\nClientService  -->\n\nClientModule->ClientService \n\n\n\nAppModule -->\n\nTrackingtimeModule->AppModule\n\n\n\n\n\nTrackingtimeService \n\nTrackingtimeService \n\nTrackingtimeService  -->\n\nTrackingtimeModule->TrackingtimeService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nAppModule->SeederModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\nUserSeederService \n\nUserSeederService \n\n\n\nLanguageSeederModule\n\nLanguageSeederModule\n\nUserSeederService  -->\n\nLanguageSeederModule->UserSeederService \n\n\n\nSeederModule -->\n\nLanguageSeederModule->SeederModule\n\n\n\n\n\nUserSeederService\n\nUserSeederService\n\nLanguageSeederModule -->\n\nUserSeederService->LanguageSeederModule\n\n\n\n\n\nSeeder\n\nSeeder\n\nSeederModule -->\n\nSeeder->SeederModule\n\n\n\n\n\nTrackingtimeService\n\nTrackingtimeService\n\nTrackingtimeModule -->\n\nTrackingtimeService->TrackingtimeModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            users   (src/.../data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n    src/database/seeders/user/data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        firstname: 'Salih',\n        lastname:'GUNGOR',\n        email: \"gungor.salih@teampify.com\",\n        password:\"test12345\",\n        roles:['admin']\n    },\n    {\n        firstname: 'Jean',\n        lastname:'DUPONT',\n        email: \"jean.dupont@teampify.com\",\n        password:\"test12345\",\n        roles:[\"admin\"]\n    },\n    {\n        firstname: 'James',\n        lastname:'LEBRON',\n        email: \"lebron.james@teampify.com\",\n        password:\"test12345\",\n        roles:[\"admin\"]\n    },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
